{
    "Variables": {
        "User Stake Amount": [
            "UserInfo.shares"
        ],
        "User Stake Reward": [
            "UserInfo.rewardDebt"
        ],
        "User Stake Time": [],
        "Stake Token Address": [
            "token"
        ],
        "Reward Token Address": [
            "NATIVE"
        ]
    },
    "Calculations": {
        "Stake": [
            {
                "Function": "deposit",
                "Node": "IERC20(NATIVE).transfer(msg.sender, pending)"
            }
        ],
        "getReward": [
            {
                "Function": "pendingNative",
                "Node": "return user.shares.mul(accNativePerShare).div(PRECISION_FACTOR).sub(user.rewardDebt)"
            },
            {
                "Function": "updatePool",
                "Node": "pool.accNativePerShare = pool.accNativePerShare.add(nativeReward.mul(PRECISION_FACTOR).div(sharesTotal)"
            }
        ],
        "unStake": [
            {
                "Function": "withdraw",
                "Node": "IERC20(NATIVE).transfer(msg.sender, pending)"
            },
            {
                "Function": "withdraw",
                "Node": "IERC20(token[i]).safeTransfer(address(msg.sender), swappedAmt)"
            }
        ]
    }
}