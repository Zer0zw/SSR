{
    "Variables": {
        "User Stake Amount": [
            "depositBalances",
            "stakedAmounts"
        ],
        "User Stake Reward": [
            "cumulativeRewards"
        ],
        "User Stake Time": [],
        "Stake Token Address": [
            "gmx",
            "esGmx",
            "bnGmx",
            "glp"
        ],
        "Reward Token Address": [
            "esGmx",
            "bnGmx",
            "weth"
        ]
    },
    "Calculations": {
        "Stake": [
            {
                "Function": "stakeGmx",
                "Node": "IRewardTracker(stakedGmxTracker).stakeForAccount(_fundingAccount, _account, _token, _amount)"
            },
            {
                "Function": "stakeEsGmx",
                "Node": "IRewardTracker(stakedGmxTracker).stakeForAccount(_fundingAccount, _account, _token, _amount)"
            },
            {
                "Function": "mintAndStakeGlp",
                "Node": "IRewardTracker(feeGlpTracker).stakeForAccount(account, account, glp, glpAmount)"
            },
            {
                "Function": "mintAndStakeGlpETH",
                "Node": "IRewardTracker(feeGlpTracker).stakeForAccount(account, account, glp, glpAmount)"
            }
        ],
        "getReward": [
            {
                "Function": "claim",
                "Node": "IRewardTracker(feeGmxTracker).claimForAccount(account, account)"
            },
            {
                "Function": "claimEsGmx",
                "Node": "IRewardTracker(stakedGmxTracker).claimForAccount(account, account)"
            },
            {
                "Function": "claimFees",
                "Node": "IRewardTracker(feeGmxTracker).claimForAccount(account, account)"
            },
            {
                "Function": "handleRewards",
                "Node": "IVester(gmxVester).claimForAccount(account, account)"
            }
        ],
        "unStake": [
            {
                "Function": "unstakeGmx",
                "Node": "IRewardTracker(stakedGmxTracker).unstakeForAccount(_account, _token, _amount, _account)"
            },
            {
                "Function": "unstakeEsGmx",
                "Node": "IRewardTracker(stakedGmxTracker).unstakeForAccount(_account, _token, _amount, _account)"
            },
            {
                "Function": "unstakeAndRedeemGlp",
                "Node": "IGlpManager(glpManager).removeLiquidityForAccount(account, _tokenOut, _glpAmount, _minOut, _receiver)"
            },
            {
                "Function": "unstakeAndRedeemGlpETH",
                "Node": "IGlpManager(glpManager).removeLiquidityForAccount(account, weth, _glpAmount, _minOut, address(this))"
            }
        ]
    }
}