{
    "Variables": {
        "User Stake Amount": [
            "stats.balance",
            "stats.counterBalance"
        ],
        "User Stake Reward": [
            "stats.totalMinted",
            "stats.totalReferral"
        ],
        "User Stake Time": [
            "stats.lastUpdated"
        ],
        "Stake Token Address": [
            "tokenAddress",
            "counterAddress"
        ],
        "Reward Token Address": [
            "mintAddress"
        ]
    },
    "Calculations": {
        "Stake": [
            {
                "Function": "freeze",
                "Node": "require(counterToken.transferFrom(_customerAddress, address(this), _counterAmount)"
            },
            {
                "Function": "freeze",
                "Node": "require(token.transferFrom(_customerAddress, address(this), _baseAmount)"
            }
        ],
        "getReward": [
            {
                "Function": "claim",
                "Node": "uint _minted = tokenMint.mint(_customerAddress,  _stakeAmount)"
            },
            {
                "Function": "claim",
                "Node": "uint _referrerMinted = tokenMint.mint(referrer,  _stakeAmount / 10)"
            },
            {
                "Function": "claim",
                "Node": "uint _ownerMinted = tokenMint.mint(owner,  _stakeAmount)"
            }
        ],
        "unStake": [
            {
                "Function": "unfreeze",
                "Node": "token.transfer(_customerAddress, balance)"
            },
            {
                "Function": "unfreeze",
                "Node": "counterToken.transfer(_customerAddress, counterBalance)"
            }
        ]
    }
}