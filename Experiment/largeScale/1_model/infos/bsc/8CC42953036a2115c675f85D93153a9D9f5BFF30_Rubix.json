{
    "Variables": {
        "User Stake Amount": [
            "_stakingBalance"
        ],
        "User Stake Reward": [
            "InvestorData.EarnedRbx"
        ],
        "User Stake Time": [
            "InvestorData.rTime"
        ],
        "Stake Token Address": [
            "_oldRBX"
        ],
        "Reward Token Address": []
    },
    "Calculations": {
        "Stake": [
            {
                "Function": "Deposit",
                "Node": "emit Transfer(_msgSender(), address(1), _amount)"
            }
        ],
        "getReward": [
            {
                "Function": "claim",
                "Node": "emit Transfer(address(1), msg.sender, _pendingBalance(msg.sender))"
            },
            {
                "Function": "claim",
                "Node": "emit Transfer(address(1), msg.sender, (_pendingBalance(msg.sender).add(_stakingBalance[msg.sender]))"
            }
        ],
        "unStake": [
            {
                "Function": "emergencyWithdraw",
                "Node": "emit Transfer(address(1), msg.sender, (_stakingBalance[msg.sender].sub(withdrawFee)))"
            }
        ]
    }
}