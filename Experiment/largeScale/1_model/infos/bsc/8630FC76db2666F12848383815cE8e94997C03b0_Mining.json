{
    "Variables": {
        "User Stake Amount": [
            "User.stakingPower",
            "User.previousPower"
        ],
        "User Stake Reward": [
            "User.pending",
            "User.extractedValue"
        ],
        "User Stake Time": [
            "Schedule.scheduleTime"
        ],
        "Stake Token Address": [
            "tokenCsr"
        ],
        "Reward Token Address": [
            "tokenSrc"
        ]
    },
    "Calculations": {
        "Stake": [
            {
                "Function": "provide",
                "Node": "require(IERC20(tokenCsr).transferFrom(customer, address(this), finalAmount)"
            }
        ],
        "getReward": [
            {
                "Function": "claim",
                "Node": "require(IERC20(tokenSrc).transfer(customer, amount)"
            },
            {
                "Function": "claimGroupWithPermit",
                "Node": "require(IERC20(tokenSrc).transfer(customers[i], amounts[i])"
            }
        ],
        "unStake": [
            {
                "Function": "_subPowerUpdate",
                "Node": "This function does not directly transfer tokens but updates the user's staking and dynamic power, affecting their ability to claim rewards"
            }
        ]
    }
}