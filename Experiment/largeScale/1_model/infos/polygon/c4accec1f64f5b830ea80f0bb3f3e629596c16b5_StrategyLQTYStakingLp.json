{
    "Variables": {
        "User Stake Amount": [
            "_baseBal",
            "_stakedAmount"
        ],
        "User Stake Reward": [
            "_rewardBal",
            "totalDistributedValue"
        ],
        "User Stake Time": [],
        "Stake Token Address": [
            "baseToken",
            "farmPool"
        ],
        "Reward Token Address": [
            "lqtyToken",
            "farmingTokens"
        ]
    },
    "Calculations": {
        "Stake": [
            {
                "Function": "_deposit",
                "Node": "IUnipool(farmPool).stake(_baseBal)"
            }
        ],
        "getReward": [
            {
                "Function": "claimReward",
                "Node": "IUnipool(farmPool).claimReward()"
            },
            {
                "Function": "claimReward",
                "Node": "ILQTYStaking(lqtyStaking).stake(lqtyBalance)"
            },
            {
                "Function": "claimReward",
                "Node": "ILQTYStaking(lqtyStaking).unstake(0)"
            },
            {
                "Function": "claimReward",
                "Node": "IWETH(wmatic).deposit{value: address(this).balance}()"
            },
            {
                "Function": "claimReward",
                "Node": "_swapTokens(_rewardToken, targetCompoundToken, _rewardBal)"
            }
        ],
        "unStake": [
            {
                "Function": "_withdrawSome",
                "Node": "IUnipool(farmPool).withdraw(_amount)"
            },
            {
                "Function": "_withdrawAll",
                "Node": "IUnipool(farmPool).withdrawAndClaim()"
            },
            {
                "Function": "retireStrat",
                "Node": "IUnipool(farmPool).withdraw(_stakedAmount)"
            },
            {
                "Function": "retireStrat",
                "Node": "IERC20(baseToken).safeTransfer(address(vault), baseBal)"
            },
            {
                "Function": "withdrawAllLQTY",
                "Node": "ILQTYStaking(lqtyStaking).unstake(uint256(-1))"
            }
        ]
    }
}