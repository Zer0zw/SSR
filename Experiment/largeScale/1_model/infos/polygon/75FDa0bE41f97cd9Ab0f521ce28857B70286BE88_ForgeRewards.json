{
    "Variables": {
        "User Stake Amount": [
            "balanceOf"
        ],
        "User Stake Reward": [
            "UserRewards.rewards",
            "UserRewards2.rewards2",
            "UserRewards3.rewards3",
            "UserRewardsExtra.rewardsExtra",
            "UserRewardsExtraExtra.rewardsExtraExtra",
            "UserRewardsExtraExtra2.rewardsExtraExtra2"
        ],
        "User Stake Time": [
            "poolLength"
        ],
        "Stake Token Address": [
            "stakedToken"
        ],
        "Reward Token Address": [
            "rewardToken",
            "rewardToken2",
            "rewardTokenExtra",
            "rewardTokenExtraExtra",
            "rewardTokenExtraExtra2"
        ]
    },
    "Calculations": {
        "Stake": [
            {
                "Function": "stakeFor",
                "Node": "super.stakeFor(forWhom, amount)"
            }
        ],
        "getReward": [
            {
                "Function": "getRewardBasicBasic",
                "Node": "require(rewardToken.transfer(msg.sender, reward), \"reward transfer failed\")"
            },
            {
                "Function": "getRewardBasicBasic",
                "Node": "require(rewardToken2.transfer(msg.sender, reward2), \"reward token 2 transfer failed\")"
            },
            {
                "Function": "getRewardBasicBasic",
                "Node": "require(receiver.send(reward3), \"Eth transfer failed\")"
            },
            {
                "Function": "getRewardBasicBasic",
                "Node": "require(rewardTokenExtra.transfer(msg.sender, rewardExtra), \"reward transfer failed\")"
            },
            {
                "Function": "getRewardBasicBasic",
                "Node": "require(rewardTokenExtraExtra.transfer(msg.sender, rewardExtraExtra), \"reward token 2 transfer failed\")"
            },
            {
                "Function": "getRewardBasicBasic",
                "Node": "require(rewardTokenExtraExtra2.transfer(msg.sender, rewardExtraExtra2), \"reward token 2 transfer failed\")"
            },
            {
                "Function": "getReward",
                "Node": "require(rewardToken.transfer(msg.sender, reward), \"reward transfer failed\")"
            },
            {
                "Function": "getReward",
                "Node": "require(receiver.send(reward3), \"Eth transfer failed\")"
            },
            {
                "Function": "getReward",
                "Node": "require(rewardToken2.transfer(msg.sender, reward2), \"reward token 2 transfer failed\")"
            },
            {
                "Function": "getReward",
                "Node": "require(rewardTokenExtra.transfer(msg.sender, rewardExtra), \"reward transfer failed\")"
            },
            {
                "Function": "getReward",
                "Node": "require(rewardTokenExtraExtra.transfer(msg.sender, rewardExtraExtra), \"reward token 2 transfer failed\")"
            },
            {
                "Function": "getReward",
                "Node": "require(rewardTokenExtraExtra2.transfer(msg.sender, rewardExtraExtra2), \"reward token 2 transfer failed\")"
            }
        ],
        "unStake": [
            {
                "Function": "withdraw",
                "Node": "super.withdraw(amount)"
            }
        ]
    }
}