{
    "Variables": {
        "User Stake Amount": [
            "UserInfo.amount"
        ],
        "User Stake Reward": [
            "UserInfo.rewardDebt",
            "UserInfo.rewardLocked"
        ],
        "User Stake Time": [
            "UserInfo.lastDepositedAt"
        ],
        "Stake Token Address": [
            "stakedToken"
        ],
        "Reward Token Address": [
            "rewardToken"
        ]
    },
    "Calculations": {
        "Stake": [
            {
                "Function": "deposit",
                "Node": "stakedToken.safeTransferFrom(address(_msgSender()), address(this), _amount)"
            }
        ],
        "getReward": [
            {
                "Function": "payOrLockupPendingReward",
                "Node": "rewardToken.safeTransfer(_msgSender(), rewardTransferred)"
            }
        ],
        "unStake": [
            {
                "Function": "withdraw",
                "Node": "stakedToken.safeTransfer(_msgSender(), _amount)"
            },
            {
                "Function": "withdrawNft",
                "Node": "IERC721(user.nftAddress).safeTransferFrom(address(this), _msgSender(), user.nftTokenId)"
            },
            {
                "Function": "withdrawNft",
                "Node": "IERC1155(user.nftAddress).safeTransferFrom(address(this), _msgSender(), user.nftTokenId, 1, \"\")"
            },
            {
                "Function": "withdrawSubNft",
                "Node": "IERC721(info.nftAddress).safeTransferFrom(address(this), _msgSender(), info.nftTokenId)"
            },
            {
                "Function": "withdrawSubNft",
                "Node": "IERC1155(info.nftAddress).safeTransferFrom(address(this), _msgSender(), info.nftTokenId, 1, \"\")"
            }
        ]
    }
}