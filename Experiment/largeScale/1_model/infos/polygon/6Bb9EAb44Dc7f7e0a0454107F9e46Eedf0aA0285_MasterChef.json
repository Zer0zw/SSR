{
    "Variables": {
        "User Stake Amount": [
            "UserInfo.amount"
        ],
        "User Stake Reward": [
            "UserInfo.rewardDebt"
        ],
        "User Stake Time": [],
        "Stake Token Address": [
            "PoolInfo.lpToken"
        ],
        "Reward Token Address": [
            "lib"
        ]
    },
    "Calculations": {
        "Stake": [
            {
                "Function": "stake",
                "Node": "safeLibreTransfer(msg.sender, pending.sub(fee))"
            }
        ],
        "getReward": [
            {
                "Function": "pendingLib",
                "Node": "return user.amount.mul(accLibPerShare).div(1e12).sub(user.rewardDebt)"
            },
            {
                "Function": "deposit",
                "Node": "safeLibreTransfer(msg.sender, pending.sub(fee))"
            },
            {
                "Function": "withdraw",
                "Node": "safeLibreTransfer(msg.sender, pending.sub(fee))"
            }
        ],
        "unStake": [
            {
                "Function": "unstake",
                "Node": "safeLibreTransfer(address(msg.sender),_amount)"
            },
            {
                "Function": "withdraw",
                "Node": "token0.transfer(address(msg.sender),token0Amount)"
            },
            {
                "Function": "withdraw",
                "Node": "token1.transfer(address(msg.sender),token1Amount)"
            },
            {
                "Function": "emergencyWithdraw",
                "Node": "pool.lpToken.safeTransfer(address(msg.sender), user.amount)"
            },
            {
                "Function": "emergencyWithdraw",
                "Node": "safeLibreTransfer(address(msg.sender),user.amount)"
            }
        ]
    }
}