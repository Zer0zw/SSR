{
    "Variables": {
        "User Stake Amount": [
            "userShares"
        ],
        "User Stake Reward": [
            "remainingRewardTokenAmount"
        ],
        "User Stake Time": [
            "lastRewardTimestamp"
        ],
        "Stake Token Address": [
            "STAKING_TOKEN"
        ],
        "Reward Token Address": [
            "STAKING_TOKEN"
        ]
    },
    "Calculations": {
        "Stake": [
            {
                "Function": "deposit",
                "Node": "STAKING_TOKEN.safeTransferFrom(msg.sender, address(this), amount"
            },
            {
                "Function": "depositTo",
                "Node": "STAKING_TOKEN.safeTransferFrom(msg.sender, address(this), amount"
            }
        ],
        "getReward": [
            {
                "Function": "addReward",
                "Node": "STAKING_TOKEN.safeTransferFrom(msg.sender, address(this), reward"
            },
            {
                "Function": "checkIfNeedGetReward",
                "Node": "STAKING_TOKEN.balanceOf(address(this)).sub(growBalanceBefore)"
            }
        ],
        "unStake": [
            {
                "Function": "withdraw",
                "Node": "STAKING_TOKEN.safeTransfer(to, amount"
            },
            {
                "Function": "withdrawAll",
                "Node": "STAKING_TOKEN.safeTransfer(to, amount"
            },
            {
                "Function": "withdrawAs",
                "Node": "IZAP(GrowRegister.get.ZapAddress()).zapOut(address(STAKING_TOKEN), tokenAddress, amount, msg.sender, minReceive"
            },
            {
                "Function": "withdrawAllAs",
                "Node": "IZAP(GrowRegister.get.ZapAddress()).zapOut(address(STAKING_TOKEN), tokenAddress, amount, msg.sender, minReceive"
            }
        ]
    }
}