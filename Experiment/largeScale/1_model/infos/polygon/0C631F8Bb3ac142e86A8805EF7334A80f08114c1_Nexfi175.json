{
    "Variables": {
        "User Stake Amount": [
            "UserInfo.amount"
        ],
        "User Stake Reward": [
            "UserInfo.rewardLockedUp",
            "pendingReward"
        ],
        "User Stake Time": [
            "UserInfo.lastRewardTime",
            "getUserDuration"
        ],
        "Stake Token Address": [
            "rewardToken"
        ],
        "Reward Token Address": [
            "rewardToken"
        ]
    },
    "Calculations": {
        "Stake": [
            {
                "Function": "depositNft",
                "Node": "IERC1155(_nftAddress).safeTransferFrom(_msgSender(), address(this), _nftTokenId, 1, \"\")"
            }
        ],
        "getReward": [
            {
                "Function": "pendingReward",
                "Node": "pending = getUserDuration(account).mul(etmAmount).mul(rewardPerPeriod).mul(exchangeRate).mul(PRECISION_FACTOR).div(exchangeRateDenominator)"
            },
            {
                "Function": "pendingReward",
                "Node": "pending = pending.div(rewardPeriod).div(10000).div(PRECISION_FACTOR).add(user.rewardLockedUp)"
            }
        ],
        "unStake": [
            {
                "Function": "withdrawNftAll",
                "Node": "IERC1155(info.nftAddress).safeTransferFrom(address(this), _msgSender(), info.nftTokenId, 1, \"\")"
            },
            {
                "Function": "withdrawSubNft",
                "Node": "IERC1155(info.nftAddress).safeTransferFrom(address(this), _msgSender(), info.nftTokenId, 1, \"\")"
            }
        ]
    }
}