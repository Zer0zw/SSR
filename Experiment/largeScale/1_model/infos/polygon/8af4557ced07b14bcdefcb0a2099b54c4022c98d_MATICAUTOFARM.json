{
    "Variables": {
        "User Stake Amount": [
            "User.busdStaked",
            "User.bafDeposits.amount"
        ],
        "User Stake Reward": [
            "User.refRewards",
            "User.lotteryRewards",
            "User.bafTokensToClaim"
        ],
        "User Stake Time": [
            "User.busdStakeCheckpoint",
            "User.bafCheckpoint"
        ],
        "Stake Token Address": [
            "BUSD",
            "BAF_TOKEN"
        ],
        "Reward Token Address": [
            "BUSD",
            "BAF_TOKEN"
        ]
    },
    "Calculations": {
        "Stake": [
            {
                "Function": "stake",
                "Node": "BUSD.transferFrom(msg.sender,address(this),busdAmount)"
            },
            {
                "Function": "stakeBafTokens",
                "Node": "BAF_TOKEN.transferFrom(msg.sender, address(this), bafAmount)"
            }
        ],
        "getReward": [
            {
                "Function": "claimBnbFee",
                "Node": "payable(msg.sender).transfer(rewards)"
            },
            {
                "Function": "withdrawBafDividends",
                "Node": "BAF_TOKEN.transfer(msg.sender,totalAmount)"
            },
            {
                "Function": "withdraw",
                "Node": "payable(msg.sender).transfer(totalAmount)"
            },
            {
                "Function": "withdrawRef",
                "Node": "payable(msg.sender).transfer(value)"
            },
            {
                "Function": "claimLotteryReward",
                "Node": "payable(msg.sender).transfer(amount)"
            }
        ],
        "unStake": [
            {
                "Function": "unstake",
                "Node": "BUSD.transfer(msg.sender,amount)"
            },
            {
                "Function": "unstakeBafTokens",
                "Node": "BAF_TOKEN.transfer(msg.sender, unstakedAmount)"
            }
        ]
    }
}