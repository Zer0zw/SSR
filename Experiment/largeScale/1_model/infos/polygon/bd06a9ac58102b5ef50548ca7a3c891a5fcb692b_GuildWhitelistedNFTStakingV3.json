{
    "Variables": {
        "User Stake Amount": [
            "stakers.numberNFTStaked",
            "stakers.numberNFTStakedPerToken"
        ],
        "User Stake Reward": [
            "stakers.rewardsEarned",
            "stakers.rewardsReleased",
            "stakers.rewardTokensRewardsEarned",
            "stakers.rewardTokensRewardsReleased"
        ],
        "User Stake Time": [
            "nftStakeRecords.nftStakeTime",
            "nftStakeRecords.nftUnstakeTime",
            "amountOfTimeSpecificNFTHasBeenStakedTotal",
            "amountOfTimeContractNFTsHaveBeenStakedTotal",
            "amountOfStakingTimeAllNFTsHaveBeenStaked"
        ],
        "Stake Token Address": [
            "whitelistedTokens"
        ],
        "Reward Token Address": [
            "rewardsToken"
        ]
    },
    "Calculations": {
        "Stake": [
            {
                "Function": "_stake",
                "Node": "sendNFT(_whitelistedNFT, _user, address(this), _tokenId)"
            },
            {
                "Function": "stakeBatch",
                "Node": "_stake(_msgSender(), _whitelistedNFTs[i], _tokenIds[i])"
            }
        ],
        "getReward": [
            {
                "Function": "claimReward",
                "Node": "rewardsToken.transfer(_user, _payableAmount)"
            },
            {
                "Function": "claimReward",
                "Node": "IERC20(_tokens[i]).transfer(_user, rewardPayableAmount)"
            }
        ],
        "unStake": [
            {
                "Function": "_unstake",
                "Node": "sendNFT(_whitelistedNFT, address(this), approvedParty[_whitelistedNFT][_tokenId], _tokenId)"
            },
            {
                "Function": "_unstake",
                "Node": "sendNFT(_whitelistedNFT, address(this), _user, _tokenId)"
            },
            {
                "Function": "emergencyUnstake",
                "Node": "_unstake(_msgSender(),_whitelistedNFT, _tokenId, isApprovedParty)"
            },
            {
                "Function": "adminEmergencySafeUnstake",
                "Node": "sendNFT(_whitelistedNFT, address(this), tokenOwner[_whitelistedNFT][_tokenId], _tokenId)"
            },
            {
                "Function": "adminEmergencyUnstake",
                "Node": "IERC721(_whitelistedNFT).transferFrom(address(this), tokenOwner[_whitelistedNFT][_tokenId], _tokenId)"
            }
        ]
    }
}