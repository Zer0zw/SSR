{
    "Variables": {
        "User Stake Amount": [
            "IRewardTracker.depositBalances",
            "IRewardTracker.stakedAmounts"
        ],
        "User Stake Reward": [
            "IRewardTracker.cumulativeRewards"
        ],
        "User Stake Time": [],
        "Stake Token Address": [
            "twst",
            "esTwst",
            "bnTwst"
        ],
        "Reward Token Address": [
            "weth",
            "esTwst"
        ]
    },
    "Calculations": {
        "Stake": [
            {
                "Function": "stakeTwstForAccount",
                "Node": "IRewardTracker(stakedTwstTracker).stakeForAccount(_fundingAccount, _account, _token, _amount)"
            },
            {
                "Function": "stakeTwst",
                "Node": "IRewardTracker(stakedTwstTracker).stakeForAccount(_fundingAccount, _account, _token, _amount)"
            },
            {
                "Function": "stakeEsTwst",
                "Node": "IRewardTracker(stakedTwstTracker).stakeForAccount(_fundingAccount, _account, _token, _amount)"
            }
        ],
        "getReward": [
            {
                "Function": "claim",
                "Node": "IRewardTracker(feeTwstTracker).claimForAccount(account, account)"
            },
            {
                "Function": "claimEsTwst",
                "Node": "IRewardTracker(stakedTwstTracker).claimForAccount(account, account)"
            },
            {
                "Function": "claimFees",
                "Node": "IRewardTracker(feeTwstTracker).claimForAccount(account, account)"
            }
        ],
        "unStake": [
            {
                "Function": "unstakeTwst",
                "Node": "IRewardTracker(stakedTwstTracker).unstakeForAccount(_account, _token, _amount, _account)"
            },
            {
                "Function": "unstakeEsTwst",
                "Node": "IRewardTracker(stakedTwstTracker).unstakeForAccount(_account, _token, _amount, _account)"
            }
        ]
    }
}