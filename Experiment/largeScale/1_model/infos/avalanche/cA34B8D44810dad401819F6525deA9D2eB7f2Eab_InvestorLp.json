{
    "Variables": {
        "User Stake Amount": [
            "accountingLedger"
        ],
        "User Stake Reward": [
            "accumulatedProfit",
            "rewardSnapshot"
        ],
        "User Stake Time": [
            "lastClaim"
        ],
        "Stake Token Address": [
            "investmentAddress",
            "liquidityPool"
        ],
        "Reward Token Address": [
            "tokensToBeRewardedAddress"
        ]
    },
    "Calculations": {
        "Stake": [
            {
                "Function": "routerDepositAvaxLp",
                "Node": "accountingLedger[msg.sender] = accountingLedger[msg.sender] + differenceBal"
            }
        ],
        "getReward": [
            {
                "Function": "routerWithdraw",
                "Node": "IJoe(0x60aE616a2155Ee3d9A68541Ba4544862310933d4).removeLiquidityAVAX(targetToken[0], differenceBal, token0Entitlement, token1Entitlement, msg.sender, block.timestamp + 3600)"
            }
        ],
        "unStake": [
            {
                "Function": "routerWithdraw",
                "Node": "IJoe(0x60aE616a2155Ee3d9A68541Ba4544862310933d4).removeLiquidityAVAX(targetToken[0], differenceBal, token0Entitlement, token1Entitlement, msg.sender, block.timestamp + 3600)"
            }
        ]
    }
}