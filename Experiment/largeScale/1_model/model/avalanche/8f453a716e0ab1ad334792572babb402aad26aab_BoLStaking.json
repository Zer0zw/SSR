{
    "Variables": {
        "User Stake Amount": [
            "stakesPerRewardToken"
        ],
        "User Stake Reward": [
            "userRewards"
        ],
        "User Stake Time": [
            "stakedNFTs.stakedTimestamp",
            "stakedNFTs.lastClaimTimestamp"
        ],
        "Stake Token Address": [
            "stakedNFTs.nftContract"
        ],
        "Reward Token Address": [
            "stakedNFTs.rewardToken"
        ]
    },
    "Functions": {
        "Stake": [
            "stake"
        ],
        "getReward": [
            "claim",
            "claimAll"
        ],
        "unStake": [
            "unstake"
        ],
        "Sensitive Functions": [
            "stake"
        ]
    },
    "Calculations": {
        "Stake": [
            {
                "Function": "stake",
                "Node": [
                    1650
                ],
                "Input": [
                    "nftContract",
                    "rewardToken",
                    "tokenId"
                ],
                "Calculation Variables": [],
                "Control Variables": [
                    "permittedNFTs",
                    "permittedRewardTokens"
                ],
                "Full Calculation Variables": [
                    "permittedNFTs",
                    "permittedRewardTokens"
                ],
                "Is Depend on this.balance": false
            }
        ],
        "getReward": [
            {
                "Function": "claim",
                "Node": [
                    1595,
                    1596,
                    1597,
                    1598,
                    1599
                ],
                "Input": [
                    "stakeId"
                ],
                "Calculation Variables": [
                    "MINIMUM_STAKING_TIME_FOR_REWARDS",
                    "rewardTokenDripRate",
                    "stakedNFTs.lastClaimTimestamp",
                    "stakedNFTs.owner",
                    "stakedNFTs.rewardToken",
                    "stakedNFTs.stakeId",
                    "stakedNFTs.stakedTimestamp"
                ],
                "Control Variables": [
                    "MINIMUM_STAKING_TIME_FOR_REWARDS",
                    "rewardTokenDripRate",
                    "rewardWallet",
                    "rewardsPaid",
                    "stakedNFTs.lastClaimTimestamp",
                    "stakedNFTs.owner",
                    "stakedNFTs.rewardToken",
                    "stakedNFTs.stakeId",
                    "stakedNFTs.stakedTimestamp",
                    "userRewards"
                ],
                "Full Calculation Variables": [
                    "MINIMUM_STAKING_TIME_FOR_REWARDS",
                    "rewardTokenDripRate",
                    "rewardWallet",
                    "rewardsPaid",
                    "stakedNFTs.lastClaimTimestamp",
                    "stakedNFTs.owner",
                    "stakedNFTs.rewardToken",
                    "stakedNFTs.stakeId",
                    "stakedNFTs.stakedTimestamp",
                    "userRewards"
                ],
                "Is Depend on this.balance": false
            },
            {
                "Function": "claimAll",
                "Node": [
                    1595,
                    1596,
                    1597,
                    1598,
                    1599
                ],
                "Input": [
                    "account",
                    "stakeId"
                ],
                "Calculation Variables": [
                    "stakedNFTs.stakedTimestamp",
                    "stakedNFTs.stakeId",
                    "rewardTokenDripRate",
                    "stakedNFTs.lastClaimTimestamp",
                    "stakedNFTs.rewardToken",
                    "stakedNFTs.owner",
                    "MINIMUM_STAKING_TIME_FOR_REWARDS"
                ],
                "Control Variables": [
                    "stakedNFTs.stakedTimestamp",
                    "stakedNFTs.stakeId",
                    "rewardTokenDripRate",
                    "stakedNFTs.lastClaimTimestamp",
                    "stakedNFTs.rewardToken",
                    "userRewards",
                    "rewardWallet",
                    "MINIMUM_STAKING_TIME_FOR_REWARDS",
                    "rewardsPaid",
                    "stakedNFTs.owner",
                    "userStakes"
                ],
                "Full Calculation Variables": [
                    "stakedNFTs.stakedTimestamp",
                    "stakedNFTs.stakeId",
                    "rewardTokenDripRate",
                    "stakedNFTs.lastClaimTimestamp",
                    "stakedNFTs.rewardToken",
                    "userRewards",
                    "rewardWallet",
                    "MINIMUM_STAKING_TIME_FOR_REWARDS",
                    "rewardsPaid",
                    "stakedNFTs.owner",
                    "userStakes"
                ],
                "Is Depend on this.balance": false
            }
        ],
        "unStake": [
            {
                "Function": "unstake",
                "Node": [
                    1712,
                    1713,
                    1714,
                    1715,
                    1716
                ],
                "Input": [
                    "stakeId"
                ],
                "Calculation Variables": [
                    "stakedNFTs.nftContract",
                    "stakedNFTs.owner",
                    "stakedNFTs.rewardToken",
                    "stakedNFTs.stakeId",
                    "stakedNFTs.tokenId"
                ],
                "Control Variables": [
                    "stakedNFTs.nftContract",
                    "stakedNFTs.owner",
                    "stakedNFTs.rewardToken",
                    "stakedNFTs.stakeId",
                    "stakedNFTs.tokenId",
                    "stakesPerRewardToken",
                    "userStakes"
                ],
                "Full Calculation Variables": [
                    "stakedNFTs.nftContract",
                    "stakedNFTs.owner",
                    "stakedNFTs.rewardToken",
                    "stakedNFTs.stakeId",
                    "stakedNFTs.tokenId",
                    "stakesPerRewardToken",
                    "userStakes"
                ],
                "Is Depend on this.balance": false
            }
        ]
    }
}