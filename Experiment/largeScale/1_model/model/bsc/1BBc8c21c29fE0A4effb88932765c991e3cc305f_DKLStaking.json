{
    "Variables": {
        "User Stake Amount": [
            "userInfo.amount"
        ],
        "User Stake Reward": [
            "userInfo.pendingRewards"
        ],
        "User Stake Time": [
            "userInfo.depositedAt"
        ],
        "Stake Token Address": [
            "stakingToken"
        ],
        "Reward Token Address": [
            "rewardToken"
        ]
    },
    "Functions": {
        "Stake": [
            "deposit"
        ],
        "getReward": [
            "claim"
        ],
        "unStake": [
            "withdraw",
            "withdrawAll",
            "withdrawPenalty"
        ],
        "Sensitive Functions": []
    },
    "Calculations": {
        "Stake": [
            {
                "Function": "deposit",
                "Node": [
                    1778
                ],
                "Input": [
                    "amount"
                ],
                "Calculation Variables": [],
                "Control Variables": [
                    "_ENTERED",
                    "_NOT_ENTERED",
                    "_paused",
                    "_status",
                    "accPerShare",
                    "endTime",
                    "lastUpdateTime",
                    "rewardRate",
                    "stakingToken",
                    "totalReward",
                    "totalSupply",
                    "userInfo",
                    "userInfo.amount",
                    "userInfo.depositedAt",
                    "users"
                ],
                "Full Calculation Variables": [
                    "_ENTERED",
                    "_NOT_ENTERED",
                    "_paused",
                    "_status",
                    "accPerShare",
                    "endTime",
                    "lastUpdateTime",
                    "rewardRate",
                    "stakingToken",
                    "totalReward",
                    "totalSupply",
                    "userInfo",
                    "userInfo.amount",
                    "userInfo.depositedAt",
                    "users"
                ],
                "Is Depend on this.balance": true
            }
        ],
        "getReward": [
            {
                "Function": "claim",
                "Node": [
                    1887
                ],
                "Input": [
                    "to",
                    "_rewardAmount",
                    "_to",
                    "amount"
                ],
                "Calculation Variables": [
                    "rewardToken",
                    "totalSupply",
                    "dividendToken",
                    "totalReward"
                ],
                "Control Variables": [
                    "totalSupply",
                    "stakingToken",
                    "rewardRate",
                    "dividendToken",
                    "rewardCycle",
                    "endTime",
                    "lastUpdateTime",
                    "userInfo.pendingRewards",
                    "rewardToken",
                    "_NOT_ENTERED",
                    "accPerShare",
                    "_status",
                    "userInfo",
                    "userInfo.claimedAt",
                    "_ENTERED",
                    "users",
                    "totalReward"
                ],
                "Full Calculation Variables": [
                    "totalSupply",
                    "stakingToken",
                    "rewardRate",
                    "dividendToken",
                    "rewardCycle",
                    "endTime",
                    "lastUpdateTime",
                    "userInfo.pendingRewards",
                    "rewardToken",
                    "_NOT_ENTERED",
                    "accPerShare",
                    "_status",
                    "userInfo",
                    "userInfo.claimedAt",
                    "_ENTERED",
                    "users",
                    "totalReward"
                ],
                "Is Depend on this.balance": true
            }
        ],
        "unStake": [
            {
                "Function": "withdraw",
                "Node": [
                    1803
                ],
                "Input": [
                    "amount"
                ],
                "Calculation Variables": [],
                "Control Variables": [
                    "MAX_FEE",
                    "_ENTERED",
                    "_NOT_ENTERED",
                    "_status",
                    "accPerShare",
                    "collectedPenalty",
                    "endTime",
                    "lastUpdateTime",
                    "penaltyFee",
                    "rewardRate",
                    "stakingToken",
                    "totalReward",
                    "totalSupply",
                    "userInfo",
                    "userInfo.amount",
                    "userInfo.depositedAt",
                    "users"
                ],
                "Full Calculation Variables": [
                    "MAX_FEE",
                    "_ENTERED",
                    "_NOT_ENTERED",
                    "_status",
                    "accPerShare",
                    "collectedPenalty",
                    "endTime",
                    "lastUpdateTime",
                    "penaltyFee",
                    "rewardRate",
                    "stakingToken",
                    "totalReward",
                    "totalSupply",
                    "userInfo",
                    "userInfo.amount",
                    "userInfo.depositedAt",
                    "users"
                ],
                "Is Depend on this.balance": false
            },
            {
                "Function": "withdrawAll",
                "Node": [
                    1815
                ],
                "Input": [
                    "amount"
                ],
                "Calculation Variables": [],
                "Control Variables": [
                    "totalSupply",
                    "rewardRate",
                    "stakingToken",
                    "userInfo.depositedAt",
                    "penaltyFee",
                    "collectedPenalty",
                    "userInfo.amount",
                    "endTime",
                    "lastUpdateTime",
                    "MAX_FEE",
                    "_NOT_ENTERED",
                    "accPerShare",
                    "_status",
                    "userInfo",
                    "_ENTERED",
                    "users",
                    "totalReward"
                ],
                "Full Calculation Variables": [
                    "totalSupply",
                    "rewardRate",
                    "stakingToken",
                    "userInfo.depositedAt",
                    "penaltyFee",
                    "collectedPenalty",
                    "userInfo.amount",
                    "endTime",
                    "lastUpdateTime",
                    "MAX_FEE",
                    "_NOT_ENTERED",
                    "accPerShare",
                    "_status",
                    "userInfo",
                    "_ENTERED",
                    "users",
                    "totalReward"
                ],
                "Is Depend on this.balance": false
            },
            {
                "Function": "withdrawPenalty",
                "Node": [
                    1825
                ],
                "Input": [],
                "Calculation Variables": [
                    "collectedPenalty",
                    "stakingToken",
                    "totalSupply"
                ],
                "Control Variables": [
                    "_owner",
                    "collectedPenalty",
                    "feeRecipient",
                    "stakingToken",
                    "totalSupply"
                ],
                "Full Calculation Variables": [
                    "_owner",
                    "collectedPenalty",
                    "feeRecipient",
                    "stakingToken",
                    "totalSupply"
                ],
                "Is Depend on this.balance": true
            }
        ]
    }
}