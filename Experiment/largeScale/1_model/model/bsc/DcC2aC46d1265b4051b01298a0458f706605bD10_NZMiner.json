{
    "Variables": {
        "User Stake Amount": [
            "userInfo.amountA",
            "userInfo.amountB"
        ],
        "User Stake Reward": [
            "userRewardInfo.accTotalReward",
            "userRewardInfo.accPendingReward",
            "userRewardInfo.peerTotalReward",
            "userRewardInfo.peerPendingReward"
        ],
        "User Stake Time": [
            "orderInfo.orderTime",
            "orderInfo.rewardTime"
        ],
        "Stake Token Address": [
            "nzAddress",
            "zzbtAddress"
        ],
        "Reward Token Address": [
            "nzAddress"
        ]
    },
    "Functions": {
        "Stake": [
            "stake"
        ],
        "getReward": [
            "claim"
        ],
        "unStake": [],
        "Sensitive Functions": []
    },
    "Calculations": {
        "Stake": [
            {
                "Function": "stake",
                "Node": [
                    507
                ],
                "Input": [
                    "amount",
                    "all"
                ],
                "Calculation Variables": [],
                "Control Variables": [
                    "userInfo.isPeer",
                    "userInfo.amountA",
                    "destroyAddress",
                    "userInfo.parent",
                    "userInfo.isValid",
                    "feeOwner",
                    "nzAddress",
                    "totalSupply",
                    "zzbtAddress",
                    "userInfo.directHash",
                    "userInfo.validInvAmount",
                    "userInfo.amountB"
                ],
                "Full Calculation Variables": [
                    "userInfo.isPeer",
                    "userInfo.amountA",
                    "destroyAddress",
                    "userInfo.parent",
                    "userInfo.isValid",
                    "feeOwner",
                    "nzAddress",
                    "totalSupply",
                    "zzbtAddress",
                    "userInfo.directHash",
                    "userInfo.validInvAmount",
                    "userInfo.amountB"
                ],
                "Is Depend on this.balance": false
            }
        ],
        "getReward": [
            {
                "Function": "claim",
                "Node": [
                    462
                ],
                "Input": [],
                "Calculation Variables": [],
                "Control Variables": [
                    "claimInfo.amount",
                    "claimInfo.rewardTime",
                    "claimInfo.user",
                    "claims",
                    "nzAddress",
                    "orderInfo.hReward",
                    "orderInfo.rate",
                    "orderInfo.rewardTime",
                    "orderInfo.tReward",
                    "orderInfo.user",
                    "userClaims",
                    "userInfo.isPeer",
                    "userInfo.parent",
                    "userInfo.validInvAmount",
                    "userOrders",
                    "userRewardInfo.accPendingReward",
                    "userRewardInfo.accTotalReward",
                    "userRewardInfo.peerPendingReward",
                    "userRewardInfo.peerTotalReward"
                ],
                "Full Calculation Variables": [
                    "claimInfo.amount",
                    "claimInfo.rewardTime",
                    "claimInfo.user",
                    "claims",
                    "nzAddress",
                    "orderInfo.hReward",
                    "orderInfo.rate",
                    "orderInfo.rewardTime",
                    "orderInfo.tReward",
                    "orderInfo.user",
                    "userClaims",
                    "userInfo.isPeer",
                    "userInfo.parent",
                    "userInfo.validInvAmount",
                    "userOrders",
                    "userRewardInfo.accPendingReward",
                    "userRewardInfo.accTotalReward",
                    "userRewardInfo.peerPendingReward",
                    "userRewardInfo.peerTotalReward"
                ],
                "Is Depend on this.balance": false
            }
        ],
        "unStake": []
    }
}