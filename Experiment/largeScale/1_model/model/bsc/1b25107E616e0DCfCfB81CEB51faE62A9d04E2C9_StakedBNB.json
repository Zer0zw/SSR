{
    "Variables": {
        "User Stake Amount": [],
        "User Stake Reward": [],
        "User Stake Time": [],
        "Stake Token Address": [
            "tokenUnderlying"
        ],
        "Reward Token Address": [
            "tokenBorrowable"
        ]
    },
    "Functions": {
        "Stake": [
            "enter",
            "enterBorrowable",
            "enterBorrowableAllIn"
        ],
        "getReward": [
            "rewardBorrowable"
        ],
        "unStake": [
            "leave",
            "leaveWithBorrowable"
        ],
        "Sensitive Functions": []
    },
    "Calculations": {
        "Stake": [
            {
                "Function": "enterBorrowableAllIn",
                "Node": [
                    2013
                ],
                "Input": [],
                "Calculation Variables": [
                    "tokenBorrowable"
                ],
                "Control Variables": [
                    "tokenBorrowable"
                ],
                "Full Calculation Variables": [
                    "tokenBorrowable"
                ],
                "Is Depend on this.balance": true
            },
            {
                "Function": "enterBorrowable",
                "Node": [
                    2029
                ],
                "Input": [
                    "_amount"
                ],
                "Calculation Variables": [],
                "Control Variables": [
                    "tokenBorrowable"
                ],
                "Full Calculation Variables": [
                    "tokenBorrowable"
                ],
                "Is Depend on this.balance": true
            },
            {
                "Function": "enter",
                "Node": [
                    2048
                ],
                "Input": [],
                "Calculation Variables": [
                    "router",
                    "tokenBorrowable"
                ],
                "Control Variables": [
                    "router",
                    "tokenBorrowable",
                    "tokenUnderlying"
                ],
                "Full Calculation Variables": [
                    "router",
                    "tokenBorrowable",
                    "tokenUnderlying"
                ],
                "Is Depend on this.balance": true
            }
        ],
        "getReward": [
            {
                "Function": "rewardBorrowable",
                "Node": [
                    2005
                ],
                "Input": [],
                "Calculation Variables": [
                    "tokenBorrowable"
                ],
                "Control Variables": [
                    "tokenBorrowable"
                ],
                "Full Calculation Variables": [
                    "tokenBorrowable"
                ],
                "Is Depend on this.balance": true
            }
        ],
        "unStake": [
            {
                "Function": "leave",
                "Node": [
                    2064
                ],
                "Input": [
                    "_share"
                ],
                "Calculation Variables": [],
                "Control Variables": [
                    "router",
                    "tokenBorrowable"
                ],
                "Full Calculation Variables": [
                    "router",
                    "tokenBorrowable"
                ],
                "Is Depend on this.balance": true
            },
            {
                "Function": "leaveWithBorrowable",
                "Node": [
                    2071
                ],
                "Input": [
                    "_share"
                ],
                "Calculation Variables": [
                    "tokenBorrowable"
                ],
                "Control Variables": [
                    "tokenBorrowable"
                ],
                "Full Calculation Variables": [
                    "tokenBorrowable"
                ],
                "Is Depend on this.balance": true
            }
        ]
    }
}