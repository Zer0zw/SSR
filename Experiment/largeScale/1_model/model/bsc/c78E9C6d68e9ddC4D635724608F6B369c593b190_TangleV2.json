{
    "Variables": {
        "User Stake Amount": [
            "rewardableEvents"
        ],
        "User Stake Reward": [
            "storedRewards"
        ],
        "User Stake Time": [
            "startTime"
        ],
        "Stake Token Address": [
            "liquidityAddress"
        ],
        "Reward Token Address": [
            "liquidityAddress"
        ]
    },
    "Functions": {
        "Stake": [
            "stake",
            "updatePosition"
        ],
        "getReward": [
            "withdrawAllRewards",
            "withdrawRewards"
        ],
        "unStake": [
            "unstake",
            "updatePosition"
        ],
        "Sensitive Functions": [
            "changeLiquidityAddress"
        ]
    },
    "Calculations": {
        "Stake": [
            {
                "Function": "stake",
                "Node": [
                    321
                ],
                "Input": [
                    "amount"
                ],
                "Calculation Variables": [],
                "Control Variables": [
                    "liquidityAddress",
                    "rewardableEvents"
                ],
                "Full Calculation Variables": [
                    "liquidityAddress",
                    "rewardableEvents"
                ],
                "Is Depend on this.balance": false
            },
            {
                "Function": "updatePosition",
                "Node": [
                    321
                ],
                "Input": [
                    "amount"
                ],
                "Calculation Variables": [],
                "Control Variables": [
                    "liquidityAddress",
                    "rewardableEvents"
                ],
                "Full Calculation Variables": [
                    "liquidityAddress",
                    "rewardableEvents"
                ],
                "Is Depend on this.balance": false
            }
        ],
        "getReward": [
            {
                "Function": "withdrawRewards",
                "Node": [
                    305
                ],
                "Input": [
                    "_address",
                    "id"
                ],
                "Calculation Variables": [],
                "Control Variables": [
                    "S",
                    "Si",
                    "WCi",
                    "balances",
                    "lastRewardDistribution",
                    "rewardConst",
                    "rewardMax",
                    "rewardableEvents",
                    "rewardsLastRewardChange",
                    "startTime",
                    "storedRewards",
                    "timeFromInitToLastRewardChange",
                    "totalRewardableEvents",
                    "workaroundConstant"
                ],
                "Full Calculation Variables": [
                    "S",
                    "Si",
                    "WCi",
                    "balances",
                    "lastRewardDistribution",
                    "rewardConst",
                    "rewardMax",
                    "rewardableEvents",
                    "rewardsLastRewardChange",
                    "startTime",
                    "storedRewards",
                    "timeFromInitToLastRewardChange",
                    "totalRewardableEvents",
                    "workaroundConstant"
                ],
                "Is Depend on this.balance": false
            },
            {
                "Function": "withdrawAllRewards",
                "Node": [
                    305
                ],
                "Input": [
                    "_address",
                    "id"
                ],
                "Calculation Variables": [],
                "Control Variables": [
                    "S",
                    "Si",
                    "WCi",
                    "balances",
                    "lastRewardDistribution",
                    "rewardConst",
                    "rewardMax",
                    "rewardableEvents",
                    "rewardsLastRewardChange",
                    "startTime",
                    "storedRewards",
                    "timeFromInitToLastRewardChange",
                    "totalRewardableEvents",
                    "workaroundConstant"
                ],
                "Full Calculation Variables": [
                    "S",
                    "Si",
                    "WCi",
                    "balances",
                    "lastRewardDistribution",
                    "rewardConst",
                    "rewardMax",
                    "rewardableEvents",
                    "rewardsLastRewardChange",
                    "startTime",
                    "storedRewards",
                    "timeFromInitToLastRewardChange",
                    "totalRewardableEvents",
                    "workaroundConstant"
                ],
                "Is Depend on this.balance": false
            }
        ],
        "unStake": [
            {
                "Function": "unstake",
                "Node": [
                    335
                ],
                "Input": [],
                "Calculation Variables": [
                    "rewardableEvents"
                ],
                "Control Variables": [
                    "liquidityAddress",
                    "rewardableEvents"
                ],
                "Full Calculation Variables": [
                    "liquidityAddress",
                    "rewardableEvents"
                ],
                "Is Depend on this.balance": false
            },
            {
                "Function": "updatePosition",
                "Node": [
                    335
                ],
                "Input": [],
                "Calculation Variables": [
                    "rewardableEvents"
                ],
                "Control Variables": [
                    "liquidityAddress",
                    "rewardableEvents"
                ],
                "Full Calculation Variables": [
                    "liquidityAddress",
                    "rewardableEvents"
                ],
                "Is Depend on this.balance": false
            }
        ]
    }
}