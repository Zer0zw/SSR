{
    "Variables": {
        "User Stake Amount": [
            "_balances"
        ],
        "User Stake Reward": [
            "_rewards"
        ],
        "User Stake Time": [
            "stakerLastGetRewardPeriod"
        ],
        "Stake Token Address": [
            "lp"
        ],
        "Reward Token Address": []
    },
    "Functions": {
        "Stake": [
            "stake",
            "stake",
            "stakeWithLP",
            "stakeWithLP"
        ],
        "getReward": [
            "exit",
            "exitWithLP",
            "getReward",
            "getReward",
            "getReward",
            "liquidityProviderGetBonus"
        ],
        "unStake": [
            "exit",
            "exit",
            "exitWithLP",
            "exitWithLP",
            "withdraw",
            "withdraw"
        ],
        "Sensitive Functions": [
            "initialize"
        ]
    },
    "Calculations": {
        "Stake": [
            {
                "Function": "stake",
                "Node": [
                    1426
                ],
                "Input": [
                    "amount",
                    "isToken0",
                    "minReceivedTokenAmountSwap",
                    "minToken0AmountAddLiq",
                    "minToken1AmountAddLiq"
                ],
                "Calculation Variables": [
                    "converter",
                    "lp",
                    "token0",
                    "token1"
                ],
                "Control Variables": [
                    "_guardCounter",
                    "_rewards",
                    "_userRewardPerTokenPaid",
                    "converter",
                    "lp",
                    "paused",
                    "stakingRewards",
                    "state",
                    "token0",
                    "token1"
                ],
                "Full Calculation Variables": [
                    "_guardCounter",
                    "_rewards",
                    "_userRewardPerTokenPaid",
                    "converter",
                    "lp",
                    "paused",
                    "stakingRewards",
                    "state",
                    "token0",
                    "token1"
                ],
                "Is Depend on this.balance": true
            },
            {
                "Function": "stakeWithLP",
                "Node": [
                    1444
                ],
                "Input": [
                    "lpAmount"
                ],
                "Calculation Variables": [],
                "Control Variables": [
                    "_guardCounter",
                    "_rewards",
                    "_userRewardPerTokenPaid",
                    "lp",
                    "paused",
                    "stakingRewards",
                    "state"
                ],
                "Full Calculation Variables": [
                    "_guardCounter",
                    "_rewards",
                    "_userRewardPerTokenPaid",
                    "lp",
                    "paused",
                    "stakingRewards",
                    "state"
                ],
                "Is Depend on this.balance": false
            }
        ],
        "getReward": [
            {
                "Function": "getReward",
                "Node": [
                    1556
                ],
                "Input": [
                    "getStakingRewardsReward",
                    "minTokenAmountConverted",
                    "token0Percentage"
                ],
                "Calculation Variables": [
                    "_rewards",
                    "bonus",
                    "liquidityProvider",
                    "penaltyPercentage",
                    "rewardBeforeCook",
                    "stakingRewards"
                ],
                "Control Variables": [
                    "_rewards",
                    "_userRewardPerTokenPaid",
                    "bonus",
                    "liquidityProvider",
                    "penaltyPercentage",
                    "period",
                    "rewardBeforeCook",
                    "stakerLastGetRewardPeriod",
                    "stakingRewards",
                    "state",
                    "token0",
                    "token1"
                ],
                "Full Calculation Variables": [
                    "_rewards",
                    "_userRewardPerTokenPaid",
                    "bonus",
                    "liquidityProvider",
                    "penaltyPercentage",
                    "period",
                    "rewardBeforeCook",
                    "stakerLastGetRewardPeriod",
                    "stakingRewards",
                    "state",
                    "token0",
                    "token1"
                ],
                "Is Depend on this.balance": false
            },
            {
                "Function": "exit",
                "Node": [
                    1556
                ],
                "Input": [
                    "getStakingRewardsReward",
                    "minTokenAmountConverted",
                    "token0Percentage"
                ],
                "Calculation Variables": [
                    "_rewards",
                    "bonus",
                    "liquidityProvider",
                    "penaltyPercentage",
                    "rewardBeforeCook",
                    "stakingRewards"
                ],
                "Control Variables": [
                    "_rewards",
                    "_userRewardPerTokenPaid",
                    "bonus",
                    "liquidityProvider",
                    "penaltyPercentage",
                    "period",
                    "rewardBeforeCook",
                    "stakerLastGetRewardPeriod",
                    "stakingRewards",
                    "state",
                    "token0",
                    "token1"
                ],
                "Full Calculation Variables": [
                    "_rewards",
                    "_userRewardPerTokenPaid",
                    "bonus",
                    "liquidityProvider",
                    "penaltyPercentage",
                    "period",
                    "rewardBeforeCook",
                    "stakerLastGetRewardPeriod",
                    "stakingRewards",
                    "state",
                    "token0",
                    "token1"
                ],
                "Is Depend on this.balance": false
            },
            {
                "Function": "exitWithLP",
                "Node": [
                    1556
                ],
                "Input": [
                    "getStakingRewardsReward",
                    "minTokenAmountConverted",
                    "token0Percentage"
                ],
                "Calculation Variables": [
                    "_rewards",
                    "bonus",
                    "liquidityProvider",
                    "penaltyPercentage",
                    "rewardBeforeCook",
                    "stakingRewards"
                ],
                "Control Variables": [
                    "_rewards",
                    "_userRewardPerTokenPaid",
                    "bonus",
                    "liquidityProvider",
                    "penaltyPercentage",
                    "period",
                    "rewardBeforeCook",
                    "stakerLastGetRewardPeriod",
                    "stakingRewards",
                    "state",
                    "token0",
                    "token1"
                ],
                "Full Calculation Variables": [
                    "_rewards",
                    "_userRewardPerTokenPaid",
                    "bonus",
                    "liquidityProvider",
                    "penaltyPercentage",
                    "period",
                    "rewardBeforeCook",
                    "stakerLastGetRewardPeriod",
                    "stakingRewards",
                    "state",
                    "token0",
                    "token1"
                ],
                "Is Depend on this.balance": false
            },
            {
                "Function": "liquidityProviderGetBonus",
                "Node": [
                    1624
                ],
                "Input": [],
                "Calculation Variables": [
                    "_rewards",
                    "bonus",
                    "liquidityProvider"
                ],
                "Control Variables": [
                    "_guardCounter",
                    "_rewards",
                    "_userRewardPerTokenPaid",
                    "bonus",
                    "liquidityProvider",
                    "stakingRewards"
                ],
                "Full Calculation Variables": [
                    "_guardCounter",
                    "_rewards",
                    "_userRewardPerTokenPaid",
                    "bonus",
                    "liquidityProvider",
                    "stakingRewards"
                ],
                "Is Depend on this.balance": false
            }
        ],
        "unStake": [
            {
                "Function": "withdraw",
                "Node": [
                    1480,
                    1481,
                    1482,
                    1483,
                    1484,
                    1485,
                    1486,
                    1487
                ],
                "Input": [
                    "amount",
                    "minToken0AmountConverted",
                    "minToken1AmountConverted",
                    "token0Percentage"
                ],
                "Calculation Variables": [],
                "Control Variables": [
                    "_guardCounter",
                    "_rewards",
                    "_userRewardPerTokenPaid",
                    "converter",
                    "lp",
                    "stakingRewards"
                ],
                "Full Calculation Variables": [
                    "_guardCounter",
                    "_rewards",
                    "_userRewardPerTokenPaid",
                    "converter",
                    "lp",
                    "stakingRewards"
                ],
                "Is Depend on this.balance": false
            },
            {
                "Function": "exit",
                "Node": [
                    1480,
                    1481,
                    1482,
                    1483,
                    1484,
                    1485,
                    1486,
                    1487
                ],
                "Input": [
                    "token0Percentage",
                    "minToken0AmountConverted",
                    "minToken0AmountConverted",
                    "minToken1AmountConverted",
                    "token0Percentage",
                    "minTokenAmountConverted",
                    "amount",
                    "minToken1AmountConverted"
                ],
                "Calculation Variables": [],
                "Control Variables": [
                    "_userRewardPerTokenPaid",
                    "stakingRewards",
                    "_guardCounter",
                    "lp",
                    "_rewards",
                    "converter"
                ],
                "Full Calculation Variables": [
                    "_userRewardPerTokenPaid",
                    "stakingRewards",
                    "_guardCounter",
                    "lp",
                    "_rewards",
                    "converter"
                ],
                "Is Depend on this.balance": false
            },
            {
                "Function": "exitWithLP",
                "Node": [
                    1579
                ],
                "Input": [
                    "minTokenAmountConverted",
                    "token0Percentage"
                ],
                "Calculation Variables": [],
                "Control Variables": [],
                "Full Calculation Variables": [],
                "Is Depend on this.balance": false
            }
        ]
    }
}