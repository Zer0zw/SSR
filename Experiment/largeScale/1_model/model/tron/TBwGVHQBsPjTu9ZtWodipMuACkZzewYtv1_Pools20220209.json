{
    "Variables": {
        "User Stake Amount": [
            "userInfo.amount"
        ],
        "User Stake Reward": [
            "pending_list",
            "allrewardList"
        ],
        "User Stake Time": [
            "staking_time",
            "unlock_time"
        ],
        "Stake Token Address": [
            "poolInfo.lpToken"
        ],
        "Reward Token Address": [
            "cake"
        ]
    },
    "Functions": {
        "Stake": [
            "deposit"
        ],
        "getReward": [
            "getReward"
        ],
        "unStake": [
            "emergencyWithdraw",
            "withdraw"
        ],
        "Sensitive Functions": [
            "MassAddPool",
            "addPool",
            "setCakePerBlockAndCake",
            "setPool"
        ]
    },
    "Calculations": {
        "Stake": [
            {
                "Function": "deposit",
                "Node": [
                    491
                ],
                "Input": [
                    "_amount",
                    "_pid",
                    "_referer"
                ],
                "Calculation Variables": [],
                "Control Variables": [
                    "BONUS_MULTIPLIER",
                    "_ENTERED",
                    "_NOT_ENTERED",
                    "_status",
                    "cakePerBlock",
                    "devaddr",
                    "not_first_staking",
                    "poolInfo.accCakePerShare",
                    "poolInfo.allocPoint",
                    "poolInfo.lastRewardBlock",
                    "poolInfo.lpToken",
                    "poolInfo.pid",
                    "poolInfo.pool_status",
                    "poolInfo.staking_stock_length",
                    "stakingNumForPool",
                    "stakingrate",
                    "totalAllocPoint",
                    "userInfo.amount",
                    "userInfo.rewardDebt"
                ],
                "Full Calculation Variables": [
                    "BONUS_MULTIPLIER",
                    "_ENTERED",
                    "_NOT_ENTERED",
                    "_status",
                    "cakePerBlock",
                    "devaddr",
                    "not_first_staking",
                    "poolInfo.accCakePerShare",
                    "poolInfo.allocPoint",
                    "poolInfo.lastRewardBlock",
                    "poolInfo.lpToken",
                    "poolInfo.pid",
                    "poolInfo.pool_status",
                    "poolInfo.staking_stock_length",
                    "stakingNumForPool",
                    "stakingrate",
                    "totalAllocPoint",
                    "userInfo.amount",
                    "userInfo.rewardDebt"
                ],
                "Is Depend on this.balance": true
            }
        ],
        "getReward": [
            {
                "Function": "getReward",
                "Node": [
                    542
                ],
                "Input": [
                    "_pid"
                ],
                "Calculation Variables": [],
                "Control Variables": [
                    "BONUS_MULTIPLIER",
                    "_ENTERED",
                    "_NOT_ENTERED",
                    "_status",
                    "allrewardList",
                    "cakePerBlock",
                    "pending_list",
                    "poolInfo.accCakePerShare",
                    "poolInfo.allocPoint",
                    "poolInfo.lastRewardBlock",
                    "poolInfo.pid",
                    "poolInfo.refererrate",
                    "poolInfo.rewardrate",
                    "referer_list",
                    "stakingNumForPool",
                    "totalAllocPoint",
                    "userInfo.amount",
                    "userInfo.rewardDebt",
                    "white_list"
                ],
                "Full Calculation Variables": [
                    "BONUS_MULTIPLIER",
                    "_ENTERED",
                    "_NOT_ENTERED",
                    "_status",
                    "allrewardList",
                    "cakePerBlock",
                    "pending_list",
                    "poolInfo.accCakePerShare",
                    "poolInfo.allocPoint",
                    "poolInfo.lastRewardBlock",
                    "poolInfo.pid",
                    "poolInfo.refererrate",
                    "poolInfo.rewardrate",
                    "referer_list",
                    "stakingNumForPool",
                    "totalAllocPoint",
                    "userInfo.amount",
                    "userInfo.rewardDebt",
                    "white_list"
                ],
                "Is Depend on this.balance": false
            }
        ],
        "unStake": [
            {
                "Function": "withdraw",
                "Node": [
                    570
                ],
                "Input": [
                    "_amount",
                    "_pid"
                ],
                "Calculation Variables": [
                    "BONUS_MULTIPLIER",
                    "cakePerBlock",
                    "poolInfo.accCakePerShare",
                    "poolInfo.allocPoint",
                    "poolInfo.lastRewardBlock",
                    "poolInfo.lpToken",
                    "poolInfo.pid",
                    "poolInfo.withdrawrate",
                    "stakingNumForPool",
                    "totalAllocPoint"
                ],
                "Control Variables": [
                    "BONUS_MULTIPLIER",
                    "_ENTERED",
                    "_NOT_ENTERED",
                    "_status",
                    "cakePerBlock",
                    "poolInfo.accCakePerShare",
                    "poolInfo.allocPoint",
                    "poolInfo.lastRewardBlock",
                    "poolInfo.lpToken",
                    "poolInfo.pid",
                    "poolInfo.withdrawrate",
                    "stakingNumForPool",
                    "totalAllocPoint",
                    "unlock_time",
                    "userInfo.amount",
                    "userInfo.rewardDebt"
                ],
                "Full Calculation Variables": [
                    "BONUS_MULTIPLIER",
                    "_ENTERED",
                    "_NOT_ENTERED",
                    "_status",
                    "cakePerBlock",
                    "poolInfo.accCakePerShare",
                    "poolInfo.allocPoint",
                    "poolInfo.lastRewardBlock",
                    "poolInfo.lpToken",
                    "poolInfo.pid",
                    "poolInfo.withdrawrate",
                    "stakingNumForPool",
                    "totalAllocPoint",
                    "unlock_time",
                    "userInfo.amount",
                    "userInfo.rewardDebt"
                ],
                "Is Depend on this.balance": false
            },
            {
                "Function": "emergencyWithdraw",
                "Node": [
                    590
                ],
                "Input": [
                    "_pid"
                ],
                "Calculation Variables": [
                    "poolInfo.lpToken",
                    "poolInfo.pid",
                    "poolInfo.withdrawrate",
                    "userInfo.amount",
                    "userInfo.rewardDebt"
                ],
                "Control Variables": [
                    "_ENTERED",
                    "_NOT_ENTERED",
                    "_status",
                    "devaddr",
                    "poolInfo.lpToken",
                    "poolInfo.pid",
                    "poolInfo.withdrawrate",
                    "unlock_time",
                    "userInfo.amount",
                    "userInfo.rewardDebt"
                ],
                "Full Calculation Variables": [
                    "_ENTERED",
                    "_NOT_ENTERED",
                    "_status",
                    "devaddr",
                    "poolInfo.lpToken",
                    "poolInfo.pid",
                    "poolInfo.withdrawrate",
                    "unlock_time",
                    "userInfo.amount",
                    "userInfo.rewardDebt"
                ],
                "Is Depend on this.balance": false
            }
        ]
    }
}