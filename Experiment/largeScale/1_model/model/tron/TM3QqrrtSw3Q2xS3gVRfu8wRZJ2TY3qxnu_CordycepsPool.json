{
    "Variables": {
        "User Stake Amount": [
            "pidToUserStakeInfo.amount"
        ],
        "User Stake Reward": [
            "pidToUserStakeInfo.rewards"
        ],
        "User Stake Time": [
            "pidToUserStakeInfo.time"
        ],
        "Stake Token Address": [
            "pidToPoolToken.lp",
            "pidToPoolToken.nft"
        ],
        "Reward Token Address": [
            "targetToken"
        ]
    },
    "Functions": {
        "Stake": [
            "stake"
        ],
        "getReward": [
            "harvest",
            "withdrawBonus",
            "withdrawDevBonus",
            "withdrawPoolBonus"
        ],
        "unStake": [
            "unStake"
        ],
        "Sensitive Functions": [
            "addNFTPool"
        ]
    },
    "Calculations": {
        "Stake": [
            {
                "Function": "stake",
                "Node": [
                    468
                ],
                "Input": [
                    "_pid",
                    "_refId",
                    "_tid"
                ],
                "Calculation Variables": [],
                "Control Variables": [
                    "addrPidToStakeTids",
                    "addrToUserId",
                    "cordyFactory",
                    "indexToPoolInfo",
                    "indexToPoolInfo.allocPoint",
                    "indexToPoolInfo.closeTime",
                    "indexToPoolInfo.currentPeriod",
                    "indexToPoolInfo.duration",
                    "indexToPoolInfo.initReward",
                    "indexToPoolInfo.lastUpdateTime",
                    "indexToPoolInfo.minLevel",
                    "indexToPoolInfo.periodFinish",
                    "indexToPoolInfo.rewardPerTokenStored",
                    "indexToPoolInfo.secReward",
                    "indexToPoolInfo.totalSupply",
                    "indexToUser",
                    "pidToPoolRate.halveMax",
                    "pidToPoolRate.halveRange",
                    "pidToPoolRate.halveRate",
                    "pidToPoolToken.decimals",
                    "pidToPoolToken.nft",
                    "pidToTotalRewards",
                    "pidToUserStakeInfo.amount",
                    "pidToUserStakeInfo.rewards",
                    "pidToUserStakeInfo.time",
                    "pidToUserStakeInfo.userRewardPerTokenPaid",
                    "poolIndex",
                    "poolStakeMax",
                    "userIndex"
                ],
                "Full Calculation Variables": [
                    "addrPidToStakeTids",
                    "addrToUserId",
                    "cordyFactory",
                    "indexToPoolInfo",
                    "indexToPoolInfo.allocPoint",
                    "indexToPoolInfo.closeTime",
                    "indexToPoolInfo.currentPeriod",
                    "indexToPoolInfo.duration",
                    "indexToPoolInfo.initReward",
                    "indexToPoolInfo.lastUpdateTime",
                    "indexToPoolInfo.minLevel",
                    "indexToPoolInfo.periodFinish",
                    "indexToPoolInfo.rewardPerTokenStored",
                    "indexToPoolInfo.secReward",
                    "indexToPoolInfo.totalSupply",
                    "indexToUser",
                    "pidToPoolRate.halveMax",
                    "pidToPoolRate.halveRange",
                    "pidToPoolRate.halveRate",
                    "pidToPoolToken.decimals",
                    "pidToPoolToken.nft",
                    "pidToTotalRewards",
                    "pidToUserStakeInfo.amount",
                    "pidToUserStakeInfo.rewards",
                    "pidToUserStakeInfo.time",
                    "pidToUserStakeInfo.userRewardPerTokenPaid",
                    "poolIndex",
                    "poolStakeMax",
                    "userIndex"
                ],
                "Is Depend on this.balance": true
            }
        ],
        "getReward": [
            {
                "Function": "harvest",
                "Node": [
                    511
                ],
                "Input": [
                    "_pid",
                    "_refId"
                ],
                "Calculation Variables": [
                    "indexToPoolInfo.allocPoint",
                    "indexToPoolInfo.closeTime",
                    "indexToPoolInfo.currentPeriod",
                    "indexToPoolInfo.duration",
                    "indexToPoolInfo.initReward",
                    "indexToPoolInfo.lastUpdateTime",
                    "indexToPoolInfo.periodFinish",
                    "indexToPoolInfo.rewardPerTokenStored",
                    "indexToPoolInfo.secReward",
                    "indexToPoolInfo.totalSupply",
                    "pidToPoolRate.halveMax",
                    "pidToPoolRate.halveRange",
                    "pidToPoolRate.halveRate",
                    "pidToPoolToken.decimals",
                    "pidToPoolToken.nft",
                    "pidToTotalRewards",
                    "pidToUserStakeInfo.amount",
                    "pidToUserStakeInfo.rewards",
                    "pidToUserStakeInfo.time",
                    "pidToUserStakeInfo.userRewardPerTokenPaid",
                    "targetToken"
                ],
                "Control Variables": [
                    "addrToUserId",
                    "bonusPool",
                    "bonusRate.dev",
                    "bonusRate.pool",
                    "bonusRate.ref",
                    "devPool",
                    "indexToPoolInfo",
                    "indexToPoolInfo.allocPoint",
                    "indexToPoolInfo.closeTime",
                    "indexToPoolInfo.currentPeriod",
                    "indexToPoolInfo.duration",
                    "indexToPoolInfo.initReward",
                    "indexToPoolInfo.lastUpdateTime",
                    "indexToPoolInfo.periodFinish",
                    "indexToPoolInfo.rewardPerTokenStored",
                    "indexToPoolInfo.secReward",
                    "indexToPoolInfo.totalSupply",
                    "indexToUser",
                    "indexToUser.addr",
                    "indexToUser.bonus",
                    "indexToUser.id",
                    "indexToUser.ref",
                    "pidToPoolRate.halveMax",
                    "pidToPoolRate.halveRange",
                    "pidToPoolRate.halveRate",
                    "pidToPoolRate.rate",
                    "pidToPoolToken.decimals",
                    "pidToPoolToken.nft",
                    "pidToTotalRewards",
                    "pidToUserStakeInfo.amount",
                    "pidToUserStakeInfo.rewards",
                    "pidToUserStakeInfo.time",
                    "pidToUserStakeInfo.userRewardPerTokenPaid",
                    "poolIndex",
                    "poolRateTime.duration",
                    "poolRateTime.maxRate",
                    "targetToken",
                    "userIndex"
                ],
                "Full Calculation Variables": [
                    "addrToUserId",
                    "bonusPool",
                    "bonusRate.dev",
                    "bonusRate.pool",
                    "bonusRate.ref",
                    "devPool",
                    "indexToPoolInfo",
                    "indexToPoolInfo.allocPoint",
                    "indexToPoolInfo.closeTime",
                    "indexToPoolInfo.currentPeriod",
                    "indexToPoolInfo.duration",
                    "indexToPoolInfo.initReward",
                    "indexToPoolInfo.lastUpdateTime",
                    "indexToPoolInfo.periodFinish",
                    "indexToPoolInfo.rewardPerTokenStored",
                    "indexToPoolInfo.secReward",
                    "indexToPoolInfo.totalSupply",
                    "indexToUser",
                    "indexToUser.addr",
                    "indexToUser.bonus",
                    "indexToUser.id",
                    "indexToUser.ref",
                    "pidToPoolRate.halveMax",
                    "pidToPoolRate.halveRange",
                    "pidToPoolRate.halveRate",
                    "pidToPoolRate.rate",
                    "pidToPoolToken.decimals",
                    "pidToPoolToken.nft",
                    "pidToTotalRewards",
                    "pidToUserStakeInfo.amount",
                    "pidToUserStakeInfo.rewards",
                    "pidToUserStakeInfo.time",
                    "pidToUserStakeInfo.userRewardPerTokenPaid",
                    "poolIndex",
                    "poolRateTime.duration",
                    "poolRateTime.maxRate",
                    "targetToken",
                    "userIndex"
                ],
                "Is Depend on this.balance": true
            },
            {
                "Function": "withdrawBonus",
                "Node": [
                    521
                ],
                "Input": [
                    "_refId"
                ],
                "Calculation Variables": [
                    "addrToUserId",
                    "indexToUser.addr",
                    "indexToUser.bonus",
                    "indexToUser.id",
                    "indexToUser.ref"
                ],
                "Control Variables": [
                    "addrToUserId",
                    "indexToUser",
                    "indexToUser.addr",
                    "indexToUser.bonus",
                    "indexToUser.id",
                    "indexToUser.ref",
                    "targetToken",
                    "userIndex"
                ],
                "Full Calculation Variables": [
                    "addrToUserId",
                    "indexToUser",
                    "indexToUser.addr",
                    "indexToUser.bonus",
                    "indexToUser.id",
                    "indexToUser.ref",
                    "targetToken",
                    "userIndex"
                ],
                "Is Depend on this.balance": false
            },
            {
                "Function": "withdrawPoolBonus",
                "Node": [
                    532
                ],
                "Input": [
                    "_account",
                    "_rate"
                ],
                "Calculation Variables": [
                    "bonusPool"
                ],
                "Control Variables": [
                    "_owner",
                    "bonusPeriodIndex",
                    "bonusPool",
                    "targetToken"
                ],
                "Full Calculation Variables": [
                    "_owner",
                    "bonusPeriodIndex",
                    "bonusPool",
                    "targetToken"
                ],
                "Is Depend on this.balance": false
            },
            {
                "Function": "withdrawDevBonus",
                "Node": [
                    543
                ],
                "Input": [],
                "Calculation Variables": [
                    "devPool"
                ],
                "Control Variables": [
                    "_owner",
                    "devAddress",
                    "devPool",
                    "targetToken"
                ],
                "Full Calculation Variables": [
                    "_owner",
                    "devAddress",
                    "devPool",
                    "targetToken"
                ],
                "Is Depend on this.balance": false
            }
        ],
        "unStake": [
            {
                "Function": "unStake",
                "Node": [
                    490
                ],
                "Input": [
                    "_pid",
                    "_refId",
                    "_tid"
                ],
                "Calculation Variables": [],
                "Control Variables": [
                    "addrPidToStakeTids",
                    "addrToUserId",
                    "cordyFactory",
                    "indexToPoolInfo.allocPoint",
                    "indexToPoolInfo.closeTime",
                    "indexToPoolInfo.currentPeriod",
                    "indexToPoolInfo.duration",
                    "indexToPoolInfo.initReward",
                    "indexToPoolInfo.lastUpdateTime",
                    "indexToPoolInfo.periodFinish",
                    "indexToPoolInfo.rewardPerTokenStored",
                    "indexToPoolInfo.secReward",
                    "indexToPoolInfo.totalSupply",
                    "indexToUser",
                    "pidToPoolRate.halveMax",
                    "pidToPoolRate.halveRange",
                    "pidToPoolRate.halveRate",
                    "pidToPoolToken.decimals",
                    "pidToPoolToken.nft",
                    "pidToTotalRewards",
                    "pidToUserStakeInfo.amount",
                    "pidToUserStakeInfo.rewards",
                    "pidToUserStakeInfo.time",
                    "pidToUserStakeInfo.userRewardPerTokenPaid",
                    "userIndex"
                ],
                "Full Calculation Variables": [
                    "addrPidToStakeTids",
                    "addrToUserId",
                    "cordyFactory",
                    "indexToPoolInfo.allocPoint",
                    "indexToPoolInfo.closeTime",
                    "indexToPoolInfo.currentPeriod",
                    "indexToPoolInfo.duration",
                    "indexToPoolInfo.initReward",
                    "indexToPoolInfo.lastUpdateTime",
                    "indexToPoolInfo.periodFinish",
                    "indexToPoolInfo.rewardPerTokenStored",
                    "indexToPoolInfo.secReward",
                    "indexToPoolInfo.totalSupply",
                    "indexToUser",
                    "pidToPoolRate.halveMax",
                    "pidToPoolRate.halveRange",
                    "pidToPoolRate.halveRate",
                    "pidToPoolToken.decimals",
                    "pidToPoolToken.nft",
                    "pidToTotalRewards",
                    "pidToUserStakeInfo.amount",
                    "pidToUserStakeInfo.rewards",
                    "pidToUserStakeInfo.time",
                    "pidToUserStakeInfo.userRewardPerTokenPaid",
                    "userIndex"
                ],
                "Is Depend on this.balance": true
            }
        ]
    }
}