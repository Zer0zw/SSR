{
    "Variables": {
        "User Stake Amount": [
            "userInfo.shares"
        ],
        "User Stake Reward": [
            "userInfo.rewardDebt"
        ],
        "User Stake Time": [
            "userInfo.lastStakeTime"
        ],
        "Stake Token Address": [
            "poolInfo.want"
        ],
        "Reward Token Address": [
            "rewardPoolInfo.rewardToken"
        ]
    },
    "Functions": {
        "Stake": [
            "deposit"
        ],
        "getReward": [
            "deposit",
            "withdraw",
            "withdrawAll"
        ],
        "unStake": [
            "emergencyWithdraw",
            "withdraw",
            "withdrawAll"
        ],
        "Sensitive Functions": [
            "addRewardPool",
            "addVault",
            "updateRewardToken"
        ]
    },
    "Calculations": {
        "Stake": [
            {
                "Function": "deposit",
                "Node": [
                    944
                ],
                "Input": [
                    "_pid",
                    "_wantAmt"
                ],
                "Calculation Variables": [],
                "Control Variables": [
                    "_ENTERED",
                    "_NOT_ENTERED",
                    "_status",
                    "pausePool",
                    "poolInfo.accRewardPerShare",
                    "poolInfo.allocPoint",
                    "poolInfo.lastRewardBlock",
                    "poolInfo.strategy",
                    "poolInfo.want",
                    "rewardPoolInfo.rewardPerBlock",
                    "rewardPoolInfo.rewardToken",
                    "rewardPoolInfo.totalPaidRewards",
                    "totalAllocPoint",
                    "userInfo.lastStakeTime",
                    "userInfo.rewardDebt",
                    "userInfo.shares",
                    "whitelistedContract"
                ],
                "Full Calculation Variables": [
                    "_ENTERED",
                    "_NOT_ENTERED",
                    "_status",
                    "pausePool",
                    "poolInfo.accRewardPerShare",
                    "poolInfo.allocPoint",
                    "poolInfo.lastRewardBlock",
                    "poolInfo.strategy",
                    "poolInfo.want",
                    "rewardPoolInfo.rewardPerBlock",
                    "rewardPoolInfo.rewardToken",
                    "rewardPoolInfo.totalPaidRewards",
                    "totalAllocPoint",
                    "userInfo.lastStakeTime",
                    "userInfo.rewardDebt",
                    "userInfo.shares",
                    "whitelistedContract"
                ],
                "Is Depend on this.balance": true
            }
        ],
        "getReward": [
            {
                "Function": "withdraw",
                "Node": [
                    925
                ],
                "Input": [
                    "_pid"
                ],
                "Calculation Variables": [
                    "poolInfo.accRewardPerShare",
                    "rewardPoolInfo.rewardToken",
                    "rewardPoolInfo.totalPaidRewards",
                    "userInfo.rewardDebt",
                    "userInfo.shares"
                ],
                "Control Variables": [
                    "poolInfo.accRewardPerShare",
                    "rewardPoolInfo.rewardToken",
                    "rewardPoolInfo.totalPaidRewards",
                    "stopRewardPool",
                    "userInfo.rewardDebt",
                    "userInfo.shares"
                ],
                "Full Calculation Variables": [
                    "poolInfo.accRewardPerShare",
                    "rewardPoolInfo.rewardToken",
                    "rewardPoolInfo.totalPaidRewards",
                    "stopRewardPool",
                    "userInfo.rewardDebt",
                    "userInfo.shares"
                ],
                "Is Depend on this.balance": false
            },
            {
                "Function": "withdrawAll",
                "Node": [
                    925
                ],
                "Input": [
                    "_pid"
                ],
                "Calculation Variables": [
                    "poolInfo.accRewardPerShare",
                    "rewardPoolInfo.rewardToken",
                    "rewardPoolInfo.totalPaidRewards",
                    "userInfo.rewardDebt",
                    "userInfo.shares"
                ],
                "Control Variables": [
                    "poolInfo.accRewardPerShare",
                    "rewardPoolInfo.rewardToken",
                    "rewardPoolInfo.totalPaidRewards",
                    "stopRewardPool",
                    "userInfo.rewardDebt",
                    "userInfo.shares"
                ],
                "Full Calculation Variables": [
                    "poolInfo.accRewardPerShare",
                    "rewardPoolInfo.rewardToken",
                    "rewardPoolInfo.totalPaidRewards",
                    "stopRewardPool",
                    "userInfo.rewardDebt",
                    "userInfo.shares"
                ],
                "Is Depend on this.balance": false
            },
            {
                "Function": "deposit",
                "Node": [
                    925
                ],
                "Input": [
                    "_pid"
                ],
                "Calculation Variables": [
                    "poolInfo.accRewardPerShare",
                    "rewardPoolInfo.rewardToken",
                    "rewardPoolInfo.totalPaidRewards",
                    "userInfo.rewardDebt",
                    "userInfo.shares"
                ],
                "Control Variables": [
                    "poolInfo.accRewardPerShare",
                    "rewardPoolInfo.rewardToken",
                    "rewardPoolInfo.totalPaidRewards",
                    "stopRewardPool",
                    "userInfo.rewardDebt",
                    "userInfo.shares"
                ],
                "Full Calculation Variables": [
                    "poolInfo.accRewardPerShare",
                    "rewardPoolInfo.rewardToken",
                    "rewardPoolInfo.totalPaidRewards",
                    "stopRewardPool",
                    "userInfo.rewardDebt",
                    "userInfo.shares"
                ],
                "Is Depend on this.balance": false
            }
        ],
        "unStake": [
            {
                "Function": "withdraw",
                "Node": [
                    1009
                ],
                "Input": [
                    "_wantAmt",
                    "_pid"
                ],
                "Calculation Variables": [
                    "poolInfo.accRewardPerShare",
                    "rewardPoolInfo.totalPaidRewards",
                    "poolInfo.lastRewardBlock",
                    "totalAllocPoint",
                    "userInfo.shares",
                    "poolInfo.strategy",
                    "rewardPoolInfo.rewardPerBlock",
                    "poolInfo.allocPoint",
                    "userInfo.rewardDebt",
                    "poolInfo.earlyWithdrawFee",
                    "rewardPoolInfo.rewardToken",
                    "poolInfo.earlyWithdrawTime",
                    "poolInfo.want"
                ],
                "Control Variables": [
                    "poolInfo.accRewardPerShare",
                    "rewardPoolInfo.totalPaidRewards",
                    "poolInfo.lastRewardBlock",
                    "totalAllocPoint",
                    "whitelisted",
                    "_status",
                    "rewardPoolInfo.rewardPerBlock",
                    "poolInfo.earlyWithdrawFee",
                    "whitelistedContract",
                    "_ENTERED",
                    "pausePool",
                    "poolInfo.earlyWithdrawTime",
                    "poolInfo.want",
                    "operator",
                    "userInfo.shares",
                    "poolInfo.strategy",
                    "poolInfo.allocPoint",
                    "userInfo.rewardDebt",
                    "rewardPoolInfo.rewardToken",
                    "_NOT_ENTERED"
                ],
                "Full Calculation Variables": [
                    "poolInfo.accRewardPerShare",
                    "rewardPoolInfo.totalPaidRewards",
                    "poolInfo.lastRewardBlock",
                    "totalAllocPoint",
                    "whitelisted",
                    "_status",
                    "rewardPoolInfo.rewardPerBlock",
                    "poolInfo.earlyWithdrawFee",
                    "whitelistedContract",
                    "_ENTERED",
                    "pausePool",
                    "poolInfo.earlyWithdrawTime",
                    "poolInfo.want",
                    "operator",
                    "userInfo.shares",
                    "poolInfo.strategy",
                    "poolInfo.allocPoint",
                    "userInfo.rewardDebt",
                    "rewardPoolInfo.rewardToken",
                    "_NOT_ENTERED"
                ],
                "Is Depend on this.balance": true
            },
            {
                "Function": "withdrawAll",
                "Node": [
                    1009
                ],
                "Input": [
                    "_wantAmt",
                    "_pid"
                ],
                "Calculation Variables": [
                    "poolInfo.accRewardPerShare",
                    "rewardPoolInfo.totalPaidRewards",
                    "poolInfo.lastRewardBlock",
                    "totalAllocPoint",
                    "userInfo.shares",
                    "poolInfo.strategy",
                    "rewardPoolInfo.rewardPerBlock",
                    "poolInfo.allocPoint",
                    "userInfo.rewardDebt",
                    "poolInfo.earlyWithdrawFee",
                    "rewardPoolInfo.rewardToken",
                    "poolInfo.earlyWithdrawTime",
                    "poolInfo.want"
                ],
                "Control Variables": [
                    "poolInfo.accRewardPerShare",
                    "rewardPoolInfo.totalPaidRewards",
                    "poolInfo.lastRewardBlock",
                    "totalAllocPoint",
                    "whitelisted",
                    "_status",
                    "rewardPoolInfo.rewardPerBlock",
                    "poolInfo.earlyWithdrawFee",
                    "whitelistedContract",
                    "_ENTERED",
                    "pausePool",
                    "poolInfo.earlyWithdrawTime",
                    "poolInfo.want",
                    "operator",
                    "userInfo.shares",
                    "poolInfo.strategy",
                    "poolInfo.allocPoint",
                    "userInfo.rewardDebt",
                    "rewardPoolInfo.rewardToken",
                    "_NOT_ENTERED"
                ],
                "Full Calculation Variables": [
                    "poolInfo.accRewardPerShare",
                    "rewardPoolInfo.totalPaidRewards",
                    "poolInfo.lastRewardBlock",
                    "totalAllocPoint",
                    "whitelisted",
                    "_status",
                    "rewardPoolInfo.rewardPerBlock",
                    "poolInfo.earlyWithdrawFee",
                    "whitelistedContract",
                    "_ENTERED",
                    "pausePool",
                    "poolInfo.earlyWithdrawTime",
                    "poolInfo.want",
                    "operator",
                    "userInfo.shares",
                    "poolInfo.strategy",
                    "poolInfo.allocPoint",
                    "userInfo.rewardDebt",
                    "rewardPoolInfo.rewardToken",
                    "_NOT_ENTERED"
                ],
                "Is Depend on this.balance": true
            },
            {
                "Function": "emergencyWithdraw",
                "Node": [
                    1044
                ],
                "Input": [
                    "_pid"
                ],
                "Calculation Variables": [
                    "userInfo.rewardDebt",
                    "poolInfo.earlyWithdrawFee",
                    "poolInfo.earlyWithdrawTime",
                    "userInfo.shares",
                    "poolInfo.strategy",
                    "poolInfo.want"
                ],
                "Control Variables": [
                    "operator",
                    "whitelisted",
                    "userInfo.shares",
                    "_status",
                    "poolInfo.strategy",
                    "userInfo.rewardDebt",
                    "poolInfo.earlyWithdrawFee",
                    "whitelistedContract",
                    "_ENTERED",
                    "pausePool",
                    "poolInfo.earlyWithdrawTime",
                    "_NOT_ENTERED",
                    "poolInfo.want"
                ],
                "Full Calculation Variables": [
                    "operator",
                    "whitelisted",
                    "userInfo.shares",
                    "_status",
                    "poolInfo.strategy",
                    "userInfo.rewardDebt",
                    "poolInfo.earlyWithdrawFee",
                    "whitelistedContract",
                    "_ENTERED",
                    "pausePool",
                    "poolInfo.earlyWithdrawTime",
                    "_NOT_ENTERED",
                    "poolInfo.want"
                ],
                "Is Depend on this.balance": false
            }
        ]
    }
}