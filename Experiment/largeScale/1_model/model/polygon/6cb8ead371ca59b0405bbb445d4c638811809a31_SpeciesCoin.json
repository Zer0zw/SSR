{
    "Variables": {
        "User Stake Amount": [
            "tokensStakedByUser"
        ],
        "User Stake Reward": [
            "pointUser"
        ],
        "User Stake Time": [
            "stakeLog.stakedAtBlock",
            "stakeLog.lastHarvestBlock"
        ],
        "Stake Token Address": [
            "TokenExchange"
        ],
        "Reward Token Address": [
            "TokenReward"
        ]
    },
    "Functions": {
        "Stake": [
            "stake"
        ],
        "getReward": [
            "harvest",
            "harvestBatch",
            "unstake"
        ],
        "unStake": [
            "unstake"
        ],
        "Sensitive Functions": [
            "setTokenExchangeAddress",
            "setTokenRewardAddress"
        ]
    },
    "Calculations": {
        "Stake": [
            {
                "Function": "stake",
                "Node": [
                    716
                ],
                "Input": [
                    "_collection",
                    "_trait",
                    "tokenId"
                ],
                "Calculation Variables": [],
                "Control Variables": [
                    "AddressCollection._id",
                    "AddressCollection.isActive",
                    "TokenExchange"
                ],
                "Full Calculation Variables": [
                    "AddressCollection._id",
                    "AddressCollection.isActive",
                    "TokenExchange"
                ],
                "Is Depend on this.balance": false
            }
        ],
        "getReward": [
            {
                "Function": "unstake",
                "Node": [
                    675
                ],
                "Input": [
                    "_collection",
                    "tokenId",
                    "owner",
                    "tokenId",
                    "_collection"
                ],
                "Calculation Variables": [
                    "AddressCollection.reward",
                    "numberOfBlocksPerRewardUnit",
                    "stakeLog.Trait",
                    "traitSpecial.trait3",
                    "traitSpecial.trait2",
                    "pointUser",
                    "traitSpecial.trait1",
                    "contractCreationBlock",
                    "stakeLog.lastHarvestBlock",
                    "stakeLog.currentlyStaked"
                ],
                "Control Variables": [
                    "TokenExchange",
                    "AddressCollection.reward",
                    "numberOfBlocksPerRewardUnit",
                    "stakeLog.Trait",
                    "traitSpecial.trait3",
                    "traitSpecial.trait2",
                    "pointUser",
                    "traitSpecial.trait1",
                    "contractCreationBlock",
                    "stakeLog.lastHarvestBlock",
                    "stakeLog.currentlyStaked"
                ],
                "Full Calculation Variables": [
                    "TokenExchange",
                    "AddressCollection.reward",
                    "numberOfBlocksPerRewardUnit",
                    "stakeLog.Trait",
                    "traitSpecial.trait3",
                    "traitSpecial.trait2",
                    "pointUser",
                    "traitSpecial.trait1",
                    "contractCreationBlock",
                    "stakeLog.lastHarvestBlock",
                    "stakeLog.currentlyStaked"
                ],
                "Is Depend on this.balance": false
            },
            {
                "Function": "harvest",
                "Node": [
                    675
                ],
                "Input": [
                    "_collection",
                    "tokenId",
                    "owner",
                    "tokenId",
                    "_collection"
                ],
                "Calculation Variables": [
                    "AddressCollection.reward",
                    "numberOfBlocksPerRewardUnit",
                    "stakeLog.Trait",
                    "traitSpecial.trait3",
                    "traitSpecial.trait2",
                    "pointUser",
                    "traitSpecial.trait1",
                    "contractCreationBlock",
                    "stakeLog.lastHarvestBlock",
                    "stakeLog.currentlyStaked"
                ],
                "Control Variables": [
                    "TokenExchange",
                    "AddressCollection.reward",
                    "numberOfBlocksPerRewardUnit",
                    "stakeLog.Trait",
                    "traitSpecial.trait3",
                    "traitSpecial.trait2",
                    "pointUser",
                    "traitSpecial.trait1",
                    "contractCreationBlock",
                    "stakeLog.lastHarvestBlock",
                    "stakeLog.currentlyStaked"
                ],
                "Full Calculation Variables": [
                    "TokenExchange",
                    "AddressCollection.reward",
                    "numberOfBlocksPerRewardUnit",
                    "stakeLog.Trait",
                    "traitSpecial.trait3",
                    "traitSpecial.trait2",
                    "pointUser",
                    "traitSpecial.trait1",
                    "contractCreationBlock",
                    "stakeLog.lastHarvestBlock",
                    "stakeLog.currentlyStaked"
                ],
                "Is Depend on this.balance": false
            },
            {
                "Function": "harvestBatch",
                "Node": [
                    675
                ],
                "Input": [
                    "_collection",
                    "tokenId",
                    "owner",
                    "tokenId",
                    "_collection"
                ],
                "Calculation Variables": [
                    "AddressCollection.reward",
                    "numberOfBlocksPerRewardUnit",
                    "stakeLog.Trait",
                    "traitSpecial.trait3",
                    "traitSpecial.trait2",
                    "pointUser",
                    "traitSpecial.trait1",
                    "contractCreationBlock",
                    "stakeLog.lastHarvestBlock",
                    "stakeLog.currentlyStaked"
                ],
                "Control Variables": [
                    "TokenExchange",
                    "AddressCollection.reward",
                    "numberOfBlocksPerRewardUnit",
                    "stakeLog.Trait",
                    "traitSpecial.trait3",
                    "traitSpecial.trait2",
                    "pointUser",
                    "traitSpecial.trait1",
                    "contractCreationBlock",
                    "stakeLog.lastHarvestBlock",
                    "stakeLog.currentlyStaked"
                ],
                "Full Calculation Variables": [
                    "TokenExchange",
                    "AddressCollection.reward",
                    "numberOfBlocksPerRewardUnit",
                    "stakeLog.Trait",
                    "traitSpecial.trait3",
                    "traitSpecial.trait2",
                    "pointUser",
                    "traitSpecial.trait1",
                    "contractCreationBlock",
                    "stakeLog.lastHarvestBlock",
                    "stakeLog.currentlyStaked"
                ],
                "Is Depend on this.balance": false
            }
        ],
        "unStake": [
            {
                "Function": "unstake",
                "Node": [
                    773
                ],
                "Input": [
                    "_collection",
                    "tokenId"
                ],
                "Calculation Variables": [],
                "Control Variables": [
                    "stakeLog.currentlyStaked",
                    "stakeLog.lastHarvestBlock"
                ],
                "Full Calculation Variables": [
                    "stakeLog.currentlyStaked",
                    "stakeLog.lastHarvestBlock"
                ],
                "Is Depend on this.balance": false
            }
        ]
    }
}