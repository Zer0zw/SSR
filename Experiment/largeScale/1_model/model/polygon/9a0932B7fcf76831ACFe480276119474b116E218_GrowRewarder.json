{
    "Variables": {
        "User Stake Amount": [],
        "User Stake Reward": [
            "strategyUsers.pendingRewards",
            "strategyUsers.lockedRewards"
        ],
        "User Stake Time": [
            "strategyUsers.lockedRewardsUnlockedAt"
        ],
        "Stake Token Address": [
            "GROW"
        ],
        "Reward Token Address": [
            "GROW"
        ]
    },
    "Functions": {
        "Stake": [
            "notifyUserSharesUpdate",
            "notifyUserSharesUpdate"
        ],
        "getReward": [
            "getRewards",
            "getRewards",
            "getRewardsFromPools",
            "getSelfRewards",
            "getVaultReward",
            "getVaultReward"
        ],
        "unStake": [
            "notifyUserSharesUpdate",
            "notifyUserSharesUpdate"
        ],
        "Sensitive Functions": [
            "initialize"
        ]
    },
    "Calculations": {
        "Stake": [
            {
                "Function": "notifyUserSharesUpdate",
                "Node": [
                    2611,
                    2612,
                    2613,
                    2614
                ],
                "Input": [
                    "isWithdraw",
                    "sharesUpdateTo",
                    "userAddress"
                ],
                "Calculation Variables": [],
                "Control Variables": [
                    "_DECIMAL",
                    "blockRewardGrowPerSecond",
                    "blockRewardTotalAllocPoint",
                    "strategies",
                    "strategies.blockRewardAccGrowPerShare",
                    "strategies.blockRewardAllocPoint",
                    "strategies.blockRewardLastRewardTimestamp",
                    "strategies.id",
                    "strategies.isVault",
                    "strategyUsers.blockRewardDebt",
                    "strategyUsers.lockedRewards",
                    "strategyUsers.lockedRewardsUnlockedAt",
                    "strategyUsers.pendingRewards"
                ],
                "Full Calculation Variables": [
                    "_DECIMAL",
                    "blockRewardGrowPerSecond",
                    "blockRewardTotalAllocPoint",
                    "strategies",
                    "strategies.blockRewardAccGrowPerShare",
                    "strategies.blockRewardAllocPoint",
                    "strategies.blockRewardLastRewardTimestamp",
                    "strategies.id",
                    "strategies.isVault",
                    "strategyUsers.blockRewardDebt",
                    "strategyUsers.lockedRewards",
                    "strategyUsers.lockedRewardsUnlockedAt",
                    "strategyUsers.pendingRewards"
                ],
                "Is Depend on this.balance": false
            }
        ],
        "getReward": [
            {
                "Function": "getRewardsFromPools",
                "Node": [
                    2477
                ],
                "Input": [
                    "sendToUser",
                    "strategyAddress",
                    "userAddress"
                ],
                "Calculation Variables": [
                    "_DECIMAL",
                    "blockRewardGrowPerSecond",
                    "blockRewardTotalAllocPoint",
                    "strategies.blockRewardAccGrowPerShare",
                    "strategies.blockRewardAllocPoint",
                    "strategies.blockRewardLastRewardTimestamp",
                    "strategies.isVault",
                    "strategyUsers.blockRewardDebt",
                    "strategyUsers.lockedRewards",
                    "strategyUsers.lockedRewardsUnlockedAt",
                    "strategyUsers.pendingRewards"
                ],
                "Control Variables": [
                    "GROW",
                    "_DECIMAL",
                    "blockRewardGrowPerSecond",
                    "blockRewardTotalAllocPoint",
                    "strategies.blockRewardAccGrowPerShare",
                    "strategies.blockRewardAllocPoint",
                    "strategies.blockRewardLastRewardTimestamp",
                    "strategies.isVault",
                    "strategyUsers.blockRewardDebt",
                    "strategyUsers.lockedRewards",
                    "strategyUsers.lockedRewardsUnlockedAt",
                    "strategyUsers.pendingRewards"
                ],
                "Full Calculation Variables": [
                    "GROW",
                    "_DECIMAL",
                    "blockRewardGrowPerSecond",
                    "blockRewardTotalAllocPoint",
                    "strategies.blockRewardAccGrowPerShare",
                    "strategies.blockRewardAllocPoint",
                    "strategies.blockRewardLastRewardTimestamp",
                    "strategies.isVault",
                    "strategyUsers.blockRewardDebt",
                    "strategyUsers.lockedRewards",
                    "strategyUsers.lockedRewardsUnlockedAt",
                    "strategyUsers.pendingRewards"
                ],
                "Is Depend on this.balance": false
            },
            {
                "Function": "getSelfRewards",
                "Node": [
                    2477
                ],
                "Input": [
                    "sendToUser",
                    "strategyAddress",
                    "userAddress"
                ],
                "Calculation Variables": [
                    "_DECIMAL",
                    "blockRewardGrowPerSecond",
                    "blockRewardTotalAllocPoint",
                    "strategies.blockRewardAccGrowPerShare",
                    "strategies.blockRewardAllocPoint",
                    "strategies.blockRewardLastRewardTimestamp",
                    "strategies.isVault",
                    "strategyUsers.blockRewardDebt",
                    "strategyUsers.lockedRewards",
                    "strategyUsers.lockedRewardsUnlockedAt",
                    "strategyUsers.pendingRewards"
                ],
                "Control Variables": [
                    "GROW",
                    "_DECIMAL",
                    "blockRewardGrowPerSecond",
                    "blockRewardTotalAllocPoint",
                    "strategies.blockRewardAccGrowPerShare",
                    "strategies.blockRewardAllocPoint",
                    "strategies.blockRewardLastRewardTimestamp",
                    "strategies.isVault",
                    "strategyUsers.blockRewardDebt",
                    "strategyUsers.lockedRewards",
                    "strategyUsers.lockedRewardsUnlockedAt",
                    "strategyUsers.pendingRewards"
                ],
                "Full Calculation Variables": [
                    "GROW",
                    "_DECIMAL",
                    "blockRewardGrowPerSecond",
                    "blockRewardTotalAllocPoint",
                    "strategies.blockRewardAccGrowPerShare",
                    "strategies.blockRewardAllocPoint",
                    "strategies.blockRewardLastRewardTimestamp",
                    "strategies.isVault",
                    "strategyUsers.blockRewardDebt",
                    "strategyUsers.lockedRewards",
                    "strategyUsers.lockedRewardsUnlockedAt",
                    "strategyUsers.pendingRewards"
                ],
                "Is Depend on this.balance": false
            },
            {
                "Function": "getRewards",
                "Node": [
                    2477
                ],
                "Input": [
                    "userAddress",
                    "userAddress",
                    "strategyAddress",
                    "sendToUser"
                ],
                "Calculation Variables": [
                    "strategies.blockRewardLastRewardTimestamp",
                    "strategies.isVault",
                    "strategyUsers.lockedRewards",
                    "strategies.blockRewardAccGrowPerShare",
                    "strategyUsers.blockRewardDebt",
                    "strategyUsers.lockedRewardsUnlockedAt",
                    "_DECIMAL",
                    "strategyUsers.pendingRewards",
                    "blockRewardTotalAllocPoint",
                    "strategies.blockRewardAllocPoint",
                    "blockRewardGrowPerSecond"
                ],
                "Control Variables": [
                    "strategies.blockRewardLastRewardTimestamp",
                    "strategies.isVault",
                    "blockRewardTotalAllocPoint",
                    "strategyUsers.lockedRewards",
                    "strategies",
                    "strategies.blockRewardAccGrowPerShare",
                    "strategyUsers.blockRewardDebt",
                    "strategyUsers.lockedRewardsUnlockedAt",
                    "_DECIMAL",
                    "strategyUsers.pendingRewards",
                    "GROW",
                    "strategies.blockRewardAllocPoint",
                    "blockRewardGrowPerSecond"
                ],
                "Full Calculation Variables": [
                    "strategies.blockRewardLastRewardTimestamp",
                    "strategies.isVault",
                    "blockRewardTotalAllocPoint",
                    "strategyUsers.lockedRewards",
                    "strategies",
                    "strategies.blockRewardAccGrowPerShare",
                    "strategyUsers.blockRewardDebt",
                    "strategyUsers.lockedRewardsUnlockedAt",
                    "_DECIMAL",
                    "strategyUsers.pendingRewards",
                    "GROW",
                    "strategies.blockRewardAllocPoint",
                    "blockRewardGrowPerSecond"
                ],
                "Is Depend on this.balance": false
            },
            {
                "Function": "getVaultReward",
                "Node": [
                    2585
                ],
                "Input": [],
                "Calculation Variables": [
                    "blockRewardGrowPerSecond",
                    "blockRewardTotalAllocPoint",
                    "strategies.blockRewardAllocPoint",
                    "strategies.blockRewardLastRewardTimestamp",
                    "strategies.id"
                ],
                "Control Variables": [
                    "GROW",
                    "blockRewardGrowPerSecond",
                    "blockRewardTotalAllocPoint",
                    "strategies",
                    "strategies.blockRewardAllocPoint",
                    "strategies.blockRewardLastRewardTimestamp",
                    "strategies.id"
                ],
                "Full Calculation Variables": [
                    "GROW",
                    "blockRewardGrowPerSecond",
                    "blockRewardTotalAllocPoint",
                    "strategies",
                    "strategies.blockRewardAllocPoint",
                    "strategies.blockRewardLastRewardTimestamp",
                    "strategies.id"
                ],
                "Is Depend on this.balance": false
            }
        ],
        "unStake": [
            {
                "Function": "notifyUserSharesUpdate",
                "Node": [
                    2603
                ],
                "Input": [
                    "isWithdraw",
                    "sharesUpdateTo",
                    "userAddress"
                ],
                "Calculation Variables": [],
                "Control Variables": [
                    "strategies"
                ],
                "Full Calculation Variables": [
                    "strategies"
                ],
                "Is Depend on this.balance": false
            }
        ]
    }
}