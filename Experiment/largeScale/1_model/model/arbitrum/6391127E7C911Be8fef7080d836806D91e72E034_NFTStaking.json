{
    "Variables": {
        "User Stake Amount": [
            "userInfo.amount"
        ],
        "User Stake Reward": [
            "userInfo.rewardDebt"
        ],
        "User Stake Time": [
            "userInfo.lockTime"
        ],
        "Stake Token Address": [
            "stakedToken"
        ],
        "Reward Token Address": [
            "rewardToken"
        ]
    },
    "Functions": {
        "Stake": [
            "deposit"
        ],
        "getReward": [
            "deposit",
            "withdraw"
        ],
        "unStake": [
            "withdraw"
        ],
        "Sensitive Functions": [
            "initialize"
        ]
    },
    "Calculations": {
        "Stake": [
            {
                "Function": "deposit",
                "Node": [
                    1662
                ],
                "Input": [
                    "tokenId"
                ],
                "Calculation Variables": [],
                "Control Variables": [
                    "NFTsInPool",
                    "depositEnabled",
                    "hasMaximumStake",
                    "hasMinimumStake",
                    "isExecuting",
                    "poolIsOpen",
                    "stakedToken",
                    "totalValueStaked",
                    "userDepositedNFTs.userDepositedNFTs",
                    "userInfo.amount",
                    "userInfo.lockTime",
                    "userInfo.rewardDebt"
                ],
                "Full Calculation Variables": [
                    "NFTsInPool",
                    "depositEnabled",
                    "hasMaximumStake",
                    "hasMinimumStake",
                    "isExecuting",
                    "poolIsOpen",
                    "stakedToken",
                    "totalValueStaked",
                    "userDepositedNFTs.userDepositedNFTs",
                    "userInfo.amount",
                    "userInfo.lockTime",
                    "userInfo.rewardDebt"
                ],
                "Is Depend on this.balance": false
            }
        ],
        "getReward": [
            {
                "Function": "deposit",
                "Node": [
                    1650
                ],
                "Input": [
                    "tokenId"
                ],
                "Calculation Variables": [
                    "endBlock",
                    "lastRewardBlock",
                    "rewardPerBlock",
                    "rewardPerStake",
                    "rewardScalingFactor",
                    "totalValueStaked",
                    "userInfo.amount",
                    "userInfo.lockTime",
                    "userInfo.rewardDebt"
                ],
                "Control Variables": [
                    "depositEnabled",
                    "endBlock",
                    "hasMaximumStake",
                    "hasMinimumStake",
                    "isExecuting",
                    "lastRewardBlock",
                    "poolIsOpen",
                    "poolRewardsBalance",
                    "rewardPerBlock",
                    "rewardPerStake",
                    "rewardScalingFactor",
                    "rewardToken",
                    "totalUsersRewards",
                    "totalValueStaked",
                    "userInfo.amount",
                    "userInfo.lockTime",
                    "userInfo.rewardDebt"
                ],
                "Full Calculation Variables": [
                    "depositEnabled",
                    "endBlock",
                    "hasMaximumStake",
                    "hasMinimumStake",
                    "isExecuting",
                    "lastRewardBlock",
                    "poolIsOpen",
                    "poolRewardsBalance",
                    "rewardPerBlock",
                    "rewardPerStake",
                    "rewardScalingFactor",
                    "rewardToken",
                    "totalUsersRewards",
                    "totalValueStaked",
                    "userInfo.amount",
                    "userInfo.lockTime",
                    "userInfo.rewardDebt"
                ],
                "Is Depend on this.balance": false
            },
            {
                "Function": "withdraw",
                "Node": [
                    1702
                ],
                "Input": [
                    "tokenId"
                ],
                "Calculation Variables": [
                    "endBlock",
                    "lastRewardBlock",
                    "rewardPerBlock",
                    "rewardPerStake",
                    "rewardScalingFactor",
                    "totalValueStaked",
                    "userInfo.amount",
                    "userInfo.lockTime",
                    "userInfo.rewardDebt"
                ],
                "Control Variables": [
                    "NFTsInPool",
                    "allDepositedNFTs",
                    "endBlock",
                    "isExecuting",
                    "lastRewardBlock",
                    "poolIsOpen",
                    "poolRewardsBalance",
                    "rewardPerBlock",
                    "rewardPerStake",
                    "rewardScalingFactor",
                    "rewardToken",
                    "stakedToken",
                    "totalUsersRewards",
                    "totalValueStaked",
                    "userDepositedNFTs.userDepositedNFTs",
                    "userInfo.amount",
                    "userInfo.lockTime",
                    "userInfo.rewardDebt",
                    "withdrawEnabled",
                    "withdrawTimerStatus"
                ],
                "Full Calculation Variables": [
                    "NFTsInPool",
                    "allDepositedNFTs",
                    "endBlock",
                    "isExecuting",
                    "lastRewardBlock",
                    "poolIsOpen",
                    "poolRewardsBalance",
                    "rewardPerBlock",
                    "rewardPerStake",
                    "rewardScalingFactor",
                    "rewardToken",
                    "stakedToken",
                    "totalUsersRewards",
                    "totalValueStaked",
                    "userDepositedNFTs.userDepositedNFTs",
                    "userInfo.amount",
                    "userInfo.lockTime",
                    "userInfo.rewardDebt",
                    "withdrawEnabled",
                    "withdrawTimerStatus"
                ],
                "Is Depend on this.balance": false
            }
        ],
        "unStake": [
            {
                "Function": "withdraw",
                "Node": [
                    1697
                ],
                "Input": [
                    "tokenId"
                ],
                "Calculation Variables": [],
                "Control Variables": [
                    "NFTsInPool",
                    "allDepositedNFTs",
                    "endBlock",
                    "isExecuting",
                    "lastRewardBlock",
                    "poolIsOpen",
                    "rewardPerBlock",
                    "rewardPerStake",
                    "rewardScalingFactor",
                    "stakedToken",
                    "totalValueStaked",
                    "userDepositedNFTs.userDepositedNFTs",
                    "userInfo.amount",
                    "userInfo.lockTime",
                    "userInfo.rewardDebt",
                    "withdrawEnabled",
                    "withdrawTimerStatus"
                ],
                "Full Calculation Variables": [
                    "NFTsInPool",
                    "allDepositedNFTs",
                    "endBlock",
                    "isExecuting",
                    "lastRewardBlock",
                    "poolIsOpen",
                    "rewardPerBlock",
                    "rewardPerStake",
                    "rewardScalingFactor",
                    "stakedToken",
                    "totalValueStaked",
                    "userDepositedNFTs.userDepositedNFTs",
                    "userInfo.amount",
                    "userInfo.lockTime",
                    "userInfo.rewardDebt",
                    "withdrawEnabled",
                    "withdrawTimerStatus"
                ],
                "Is Depend on this.balance": false
            }
        ]
    }
}