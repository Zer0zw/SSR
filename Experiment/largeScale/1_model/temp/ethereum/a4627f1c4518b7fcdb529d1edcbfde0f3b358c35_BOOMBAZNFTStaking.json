{
    "Variables": {
        "User Stake Amount": [
            "UserInfo.amount"
        ],
        "User Stake Reward": [
            "UserInfo.rewardDebt"
        ],
        "User Stake Time": [],
        "Stake Token Address": [
            "BOOMBAZNFTToken"
        ],
        "Reward Token Address": [
            "PoolInfo.rewardsToken"
        ]
    },
    "Calculations": {
        "Stake": [
            {
                "Function": "joinPool",
                "Node": "BOOMBAZNFTToken.safeTransferFrom(msg.sender, address(this), _tokenId"
            },
            {
                "Function": "joinPoolBatch",
                "Node": "BOOMBAZNFTToken.safeTransferFrom(msg.sender, address(this), _id"
            }
        ],
        "getReward": [
            {
                "Function": "pendingRewardsToken",
                "Node": "safeRewardTransfer(_pid, msg.sender, pending)"
            },
            {
                "Function": "redeem",
                "Node": "safeRewardTransfer(_pid, msg.sender, pending)"
            },
            {
                "Function": "redeemAll",
                "Node": "safeRewardTransfer(_pid, msg.sender, pending)"
            }
        ],
        "unStake": [
            {
                "Function": "leavePool",
                "Node": "BOOMBAZNFTToken.safeTransferFrom(address(this), msg.sender, _id"
            },
            {
                "Function": "leavePoolBatch",
                "Node": "BOOMBAZNFTToken.safeTransferFrom(address(this), msg.sender, _id"
            },
            {
                "Function": "leavePoolForUser",
                "Node": "BOOMBAZNFTToken.safeTransferFrom(address(this), _account, _id"
            },
            {
                "Function": "leavePoolBatchForUser",
                "Node": "BOOMBAZNFTToken.safeTransferFrom(address(this), _account, _id"
            }
        ]
    }
}