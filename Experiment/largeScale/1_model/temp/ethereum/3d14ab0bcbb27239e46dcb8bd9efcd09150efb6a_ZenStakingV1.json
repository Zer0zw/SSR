{
    "Variables": {
        "User Stake Amount": [
            "stakedTokensAmount"
        ],
        "User Stake Reward": [
            "yieldPerDay"
        ],
        "User Stake Time": [
            "StakedToken.stakingTimestamp",
            "StakedToken.lastClaimTimestamp",
            "_requiredStakeTime"
        ],
        "Stake Token Address": [
            "zenApesContract"
        ],
        "Reward Token Address": [
            "zenTokenContract"
        ]
    },
    "Calculations": {
        "Stake": [
            {
                "Function": "stake",
                "Node": "zenApesContract.transferFrom(msg.sender, address(this), tokenId)"
            },
            {
                "Function": "stakeBatch",
                "Node": "zenApesContract.multiTransferFrom(msg.sender, address(this), tokenIds)"
            }
        ],
        "getReward": [
            {
                "Function": "claim",
                "Node": "zenTokenContract.mintAsController(msg.sender, claimAmount)"
            },
            {
                "Function": "batchClaim",
                "Node": "zenTokenContract.mintAsController(msg.sender, claimAmount)"
            }
        ],
        "unStake": [
            {
                "Function": "unstake",
                "Node": "zenApesContract.transferFrom(address(this), msg.sender, tokenId)"
            },
            {
                "Function": "unstakeBatch",
                "Node": "zenApesContract.multiTransferFrom(address(this), msg.sender, tokenIds)"
            },
            {
                "Function": "ownerUnstakeBatch",
                "Node": "zenApesContract.transferFrom(address(this), stakedTokens[uint16(cId)].tokenOwner, cId)"
            }
        ]
    }
}