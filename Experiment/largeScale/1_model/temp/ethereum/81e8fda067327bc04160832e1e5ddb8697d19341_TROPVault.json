{
    "Variables": {
        "User Stake Amount": [
            "UserInfo.amount"
        ],
        "User Stake Reward": [
            "UserInfo.rewardLocked"
        ],
        "User Stake Time": [
            "UserInfo.lockedPeriod"
        ],
        "Stake Token Address": [
            "PoolInfo.token"
        ],
        "Reward Token Address": [
            "trop"
        ]
    },
    "Calculations": {
        "Stake": [
            {
                "Function": "deposit",
                "Node": "pool.token.safeTransferFrom(address(msg.sender), address(this), _amount"
            },
            {
                "Function": "depositFor",
                "Node": "pool.token.safeTransferFrom(address(msg.sender), address(this), _amount"
            }
        ],
        "getReward": [
            {
                "Function": "updateAndPayOutPending",
                "Node": "safeTROPTransfer(from, paid)"
            },
            {
                "Function": "updateAndPayOutPending",
                "Node": "safeTRIPTransfer(from, _tripReward)"
            },
            {
                "Function": "withdraw",
                "Node": "updateAndPayOutPending(_pid, from)"
            },
            {
                "Function": "withdrawFrom",
                "Node": "updateAndPayOutPending(_pid, owner)"
            }
        ],
        "unStake": [
            {
                "Function": "withdraw",
                "Node": "pool.token.safeTransfer(address(to), _amount)"
            },
            {
                "Function": "withdrawFrom",
                "Node": "pool.token.safeTransfer(address(to), _amount)"
            },
            {
                "Function": "emergencyWithdraw",
                "Node": "pool.token.safeTransfer(address(msg.sender), user.amount)"
            }
        ]
    }
}